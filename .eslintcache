{"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node-api/server.js":{"size":17318,"mtime":1539777479000,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node-api/server.js","messages":[{"ruleId":"import/no-unresolved","severity":2,"message":"Resolve error: Cannot find module '/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node-api/webpack.config.eslint.js'\nRequire stack:\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-import-resolver-webpack/index.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-module-utils/resolve.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-plugin-import/lib/rules/no-unresolved.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-plugin-import/lib/index.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/config/plugins.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/config.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/cli-engine.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/cli.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/bin/eslint.js","line":1,"column":1,"nodeType":null},{"ruleId":"import/order","severity":2,"message":"Resolve error: Cannot find module '/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node-api/webpack.config.eslint.js'\nRequire stack:\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-import-resolver-webpack/index.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-module-utils/resolve.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-plugin-import/lib/rules/no-unresolved.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-plugin-import/lib/index.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/config/plugins.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/config.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/cli-engine.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/cli.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/bin/eslint.js","line":1,"column":1,"nodeType":null},{"ruleId":"import/no-self-import","severity":2,"message":"Resolve error: Cannot find module '/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node-api/webpack.config.eslint.js'\nRequire stack:\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-import-resolver-webpack/index.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-module-utils/resolve.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-plugin-import/lib/rules/no-unresolved.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint-plugin-import/lib/index.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/config/plugins.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/config.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/cli-engine.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/lib/cli.js\n- /Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/node_modules/eslint/bin/eslint.js","line":1,"column":1,"nodeType":null},{"ruleId":"no-unused-vars","severity":2,"message":"'_' is assigned a value but never used.","line":3,"column":7,"nodeType":"Identifier","endLine":3,"endColumn":8},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":6,"column":1,"nodeType":"VariableDeclaration","endLine":6,"endColumn":40},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":6,"column":1,"nodeType":"VariableDeclaration","endLine":6,"endColumn":40,"fix":{"range":[137,140],"text":"let"}},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'formidable'.","line":6,"column":26,"nodeType":"Literal","endLine":6,"endColumn":38},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":8,"column":1,"nodeType":"VariableDeclaration","endLine":8,"endColumn":28},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":8,"column":1,"nodeType":"VariableDeclaration","endLine":8,"endColumn":28,"fix":{"range":[203,206],"text":"let"}},{"ruleId":"no-unused-vars","severity":2,"message":"'http' is assigned a value but never used.","line":8,"column":5,"nodeType":"Identifier","endLine":8,"endColumn":9},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":9,"column":1,"nodeType":"VariableDeclaration","endLine":9,"endColumn":55},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":9,"column":1,"nodeType":"VariableDeclaration","endLine":9,"endColumn":55,"fix":{"range":[231,234],"text":"let"}},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'internet-available'.","line":9,"column":33,"nodeType":"Literal","endLine":9,"endColumn":53},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'aws-sdk'.","line":10,"column":21,"nodeType":"Literal","endLine":10,"endColumn":30},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":11,"column":1,"nodeType":"VariableDeclaration","endLine":11,"endColumn":34},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":11,"column":1,"nodeType":"VariableDeclaration","endLine":11,"endColumn":34,"fix":{"range":[318,321],"text":"let"}},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'shortid'.","line":11,"column":23,"nodeType":"Literal","endLine":11,"endColumn":32},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":12,"column":1,"nodeType":"VariableDeclaration","endLine":12,"endColumn":37},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":12,"column":1,"nodeType":"VariableDeclaration","endLine":12,"endColumn":37,"fix":{"range":[352,355],"text":"let"}},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'sqlite3'.","line":13,"column":25,"nodeType":"Literal","endLine":13,"endColumn":34},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":14,"column":1,"nodeType":"VariableDeclaration","endLine":14,"endColumn":32},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":14,"column":1,"nodeType":"VariableDeclaration","endLine":14,"endColumn":32,"fix":{"range":[435,438],"text":"let"}},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":15,"column":1,"nodeType":"VariableDeclaration","endLine":15,"endColumn":28},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":15,"column":1,"nodeType":"VariableDeclaration","endLine":15,"endColumn":28,"fix":{"range":[467,470],"text":"let"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'sqlite_db' is not in camel case.","line":18,"column":5,"nodeType":"Identifier","messageId":"notCamelCase","endLine":18,"endColumn":14},{"ruleId":"prefer-const","severity":2,"message":"'sqlite_db' is never reassigned. Use 'const' instead.","line":18,"column":5,"nodeType":"Identifier","endLine":18,"endColumn":14,"fix":{"range":[531,534],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'dateFormat' is never reassigned. Use 'const' instead.","line":27,"column":7,"nodeType":"Identifier","endLine":27,"endColumn":17,"fix":{"range":[742,745],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'testDateUtc' is never reassigned. Use 'const' instead.","line":28,"column":7,"nodeType":"Identifier","endLine":28,"endColumn":18,"fix":{"range":[784,787],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'localDate' is never reassigned. Use 'const' instead.","line":29,"column":7,"nodeType":"Identifier","endLine":29,"endColumn":16,"fix":{"range":[820,823],"text":"const"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 's3_bucket' is not in camel case.","line":38,"column":7,"nodeType":"Identifier","messageId":"notCamelCase","endLine":38,"endColumn":16},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":41,"column":1,"nodeType":"VariableDeclaration","endLine":41,"endColumn":21},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":41,"column":1,"nodeType":"VariableDeclaration","endLine":41,"endColumn":21,"fix":{"range":[1098,1101],"text":"let"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":42,"column":28,"nodeType":"FunctionExpression","endLine":50,"endColumn":2},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":42,"column":28,"nodeType":"FunctionExpression","endLine":50,"endColumn":2,"fix":{"range":[1146,1481],"text":"(req, res, next) => {\n  res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n  res.setHeader(\"Access-Control-Allow-Methods\", \"GET,PUT,POST,DELETE,OPTIONS\");\n  res.setHeader(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  if ('OPTIONS' == req.method)\n    res.sendStatus(200);\n  else\n    next();\n}"}},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ==.","line":46,"column":7,"nodeType":"BinaryExpression","endLine":46,"endColumn":30,"fix":{"range":[1411,1434],"text":"req.method == 'OPTIONS'"}},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":46,"column":17,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":54,"column":5,"nodeType":"VariableDeclaration","endLine":54,"endColumn":46,"fix":{"range":[1561,1564],"text":"let"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":55,"column":25,"nodeType":"FunctionExpression","endLine":103,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":55,"column":25,"nodeType":"FunctionExpression","endLine":103,"endColumn":6,"fix":{"range":[1627,3775],"text":"(err, fields, files) => {\n        if (err) next(err);\n        if(!Object.keys(files).length) {\n          response.status(422).send({'success': false, 'err': 'Please select a file to upload.'});\n        }\n        else {\n          form.uploadDir = localFileDir;\n          let newFileName = shortid.generate() + '.' + files.file.name.split('.').pop()\n          fs.rename(files.file.path, form.uploadDir + newFileName , function(err) {\n              if (err) next(err);\n\n              let local_url = 'http://' + request.headers.host + '/download/LOCAL/' + newFileName;\n                internetAvailable().then(function(){\n                    fs.readFile(localFileDir + newFileName, (err, data) => {\n                       if (err) throw err;\n                       const params = {\n                           Bucket: s3_bucket,\n                           Key: newFileName,\n                           Body: data,\n                           ACL: 'public-read',\n                           ContentType: files.file.type\n                       };\n                       s3.upload(params, function(s3Err, uploadData) {\n                           if (s3Err) throw s3Err\n                           uploadData.local_url = local_url\n\n                           response.send(\n                              {\n                                'data': uploadData,\n                                'success': true,\n                                'msg': 'File is uploaded to s3 successfully'\n                              }\n                            );\n                       });\n                    });\n                }).catch(function(){\n                    let localUploadData = {'local_url': local_url, 'Location': 'NA', 'Key': newFileName}\n                    response.send(\n                      {\n                        'data': localUploadData,\n                        'success': true,\n                        'msg': 'File is uploaded to local disk successfully',\n                        'connectivityProb': 'It seems internet connection is not available'\n                      }\n                    );\n                });\n          });\n        }\n    }"}},{"ruleId":"no-undef","severity":2,"message":"'next' is not defined.","line":56,"column":18,"nodeType":"Identifier","endLine":56,"endColumn":22},{"ruleId":"prefer-const","severity":2,"message":"'newFileName' is never reassigned. Use 'const' instead.","line":62,"column":15,"nodeType":"Identifier","endLine":62,"endColumn":26,"fix":{"range":[1902,1905],"text":"const"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":62,"column":29,"nodeType":"BinaryExpression","endLine":62,"endColumn":88,"fix":{"range":[1920,1979],"text":"`${shortid.generate()  }.${  files.file.name.split('.').pop()}`"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":63,"column":69,"nodeType":"FunctionExpression","endLine":101,"endColumn":12},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":63,"column":69,"nodeType":"FunctionExpression","endLine":101,"endColumn":12,"fix":{"range":[2048,3757],"text":"(err) => {\n              if (err) next(err);\n\n              let local_url = 'http://' + request.headers.host + '/download/LOCAL/' + newFileName;\n                internetAvailable().then(function(){\n                    fs.readFile(localFileDir + newFileName, (err, data) => {\n                       if (err) throw err;\n                       const params = {\n                           Bucket: s3_bucket,\n                           Key: newFileName,\n                           Body: data,\n                           ACL: 'public-read',\n                           ContentType: files.file.type\n                       };\n                       s3.upload(params, function(s3Err, uploadData) {\n                           if (s3Err) throw s3Err\n                           uploadData.local_url = local_url\n\n                           response.send(\n                              {\n                                'data': uploadData,\n                                'success': true,\n                                'msg': 'File is uploaded to s3 successfully'\n                              }\n                            );\n                       });\n                    });\n                }).catch(function(){\n                    let localUploadData = {'local_url': local_url, 'Location': 'NA', 'Key': newFileName}\n                    response.send(\n                      {\n                        'data': localUploadData,\n                        'success': true,\n                        'msg': 'File is uploaded to local disk successfully',\n                        'connectivityProb': 'It seems internet connection is not available'\n                      }\n                    );\n                });\n          }"}},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":63,"column":78,"nodeType":"Identifier","endLine":63,"endColumn":81},{"ruleId":"no-undef","severity":2,"message":"'next' is not defined.","line":64,"column":24,"nodeType":"Identifier","endLine":64,"endColumn":28},{"ruleId":"camelcase","severity":2,"message":"Identifier 'local_url' is not in camel case.","line":66,"column":19,"nodeType":"Identifier","messageId":"notCamelCase","endLine":66,"endColumn":28},{"ruleId":"prefer-const","severity":2,"message":"'local_url' is never reassigned. Use 'const' instead.","line":66,"column":19,"nodeType":"Identifier","endLine":66,"endColumn":28,"fix":{"range":[2113,2116],"text":"const"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":66,"column":31,"nodeType":"BinaryExpression","endLine":66,"endColumn":98,"fix":{"range":[2129,2196],"text":"`http://${  request.headers.host  }/download/LOCAL/${  newFileName}`"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":67,"column":42,"nodeType":"FunctionExpression","endLine":90,"endColumn":18},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":67,"column":42,"nodeType":"FunctionExpression","endLine":90,"endColumn":18,"fix":{"range":[2239,3235],"text":"() => {\n                    fs.readFile(localFileDir + newFileName, (err, data) => {\n                       if (err) throw err;\n                       const params = {\n                           Bucket: s3_bucket,\n                           Key: newFileName,\n                           Body: data,\n                           ACL: 'public-read',\n                           ContentType: files.file.type\n                       };\n                       s3.upload(params, function(s3Err, uploadData) {\n                           if (s3Err) throw s3Err\n                           uploadData.local_url = local_url\n\n                           response.send(\n                              {\n                                'data': uploadData,\n                                'success': true,\n                                'msg': 'File is uploaded to s3 successfully'\n                              }\n                            );\n                       });\n                    });\n                }"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":67,"column":42,"nodeType":"FunctionExpression","endLine":90,"endColumn":18},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":68,"column":62,"nodeType":"Identifier","endLine":68,"endColumn":65},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":77,"column":42,"nodeType":"FunctionExpression","endLine":88,"endColumn":25},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":77,"column":42,"nodeType":"FunctionExpression","endLine":88,"endColumn":25,"fix":{"range":[2711,3191],"text":"(s3Err, uploadData) => {\n                           if (s3Err) throw s3Err\n                           uploadData.local_url = local_url\n\n                           response.send(\n                              {\n                                'data': uploadData,\n                                'success': true,\n                                'msg': 'File is uploaded to s3 successfully'\n                              }\n                            );\n                       }"}},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'uploadData'.","line":79,"column":28,"nodeType":"Identifier","endLine":79,"endColumn":38},{"ruleId":"camelcase","severity":2,"message":"Identifier 'local_url' is not in camel case.","line":79,"column":51,"nodeType":"Identifier","messageId":"notCamelCase","endLine":79,"endColumn":60},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":90,"column":26,"nodeType":"FunctionExpression","endLine":100,"endColumn":18},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":90,"column":26,"nodeType":"FunctionExpression","endLine":100,"endColumn":18,"fix":{"range":[3243,3743],"text":"() => {\n                    let localUploadData = {'local_url': local_url, 'Location': 'NA', 'Key': newFileName}\n                    response.send(\n                      {\n                        'data': localUploadData,\n                        'success': true,\n                        'msg': 'File is uploaded to local disk successfully',\n                        'connectivityProb': 'It seems internet connection is not available'\n                      }\n                    );\n                }"}},{"ruleId":"prefer-const","severity":2,"message":"'localUploadData' is never reassigned. Use 'const' instead.","line":91,"column":25,"nodeType":"Identifier","endLine":91,"endColumn":40,"fix":{"range":[3275,3278],"text":"const"}},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":108,"column":5,"nodeType":"VariableDeclaration","endLine":108,"endColumn":46,"fix":{"range":[3867,3870],"text":"let"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":109,"column":25,"nodeType":"FunctionExpression","endLine":167,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":109,"column":25,"nodeType":"FunctionExpression","endLine":167,"endColumn":6,"fix":{"range":[3933,6451],"text":"(err, fields, files) => {\n        if (err) next(err);\n        if(!Object.keys(files).length) {\n          response.status(422).send({'success': false, 'err': 'Please select a file to upload.'});\n        }\n        else {\n          // deleting existing file from local disk\n          fs.unlink(localFileDir + '/' + fields.old_file,function(err){});\n\n          form.uploadDir = localFileDir;\n          let newFileName = fields.file_name;\n          fs.rename(files.file.path, form.uploadDir + newFileName , function(err) {\n              if (err) next(err);\n\n              let local_url = 'http://' + request.headers.host + '/download/LOCAL/' + newFileName;\n                internetAvailable().then(function(){\n                    fs.readFile(localFileDir + newFileName, (err, data) => {\n                       if (err) throw err;\n\n                       // deleting existing file from s3\n                       s3.deleteObject({Bucket: s3_bucket,Key: fields.old_file}, function (err, data) {\n                         console.log('Deleting existing file');\n                       });\n\n\n                       const params = {\n                           Bucket: s3_bucket,\n                           Key: newFileName,\n                           Body: data,\n                           ACL: 'public-read',\n                           ContentType: files.file.type\n                       };\n                       s3.upload(params, function(s3Err, uploadData) {\n                           if (s3Err) throw s3Err\n                           uploadData.local_url = local_url\n\n                           response.send(\n                              {\n                                'data': uploadData,\n                                'success': true,\n                                'msg': 'File is updated & uploaded to s3 successfully'\n                              }\n                            );\n                       });\n                    });\n                }).catch(function(){\n                    let localUploadData = {'local_url': local_url, 'Location': fields.s3_url, 'Key': newFileName}\n                    response.send(\n                      {\n                        'data': localUploadData,\n                        'success': true,\n                        'msg': 'File is updated & uploaded to local disk successfully',\n                        'connectivityProb': 'It seems internet connection is not available'\n                      }\n                    );\n                });\n          });\n        }\n    }"}},{"ruleId":"no-undef","severity":2,"message":"'next' is not defined.","line":110,"column":18,"nodeType":"Identifier","endLine":110,"endColumn":22},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":116,"column":21,"nodeType":"BinaryExpression","endLine":116,"endColumn":57,"fix":{"range":[4229,4265],"text":"`${localFileDir  }/${  fields.old_file}`"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":116,"column":58,"nodeType":"FunctionExpression","endLine":116,"endColumn":73},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":116,"column":58,"nodeType":"FunctionExpression","endLine":116,"endColumn":73,"fix":{"range":[4266,4281],"text":"(err) => {}"}},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":116,"column":67,"nodeType":"Identifier","endLine":116,"endColumn":70},{"ruleId":"no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":116,"column":67,"nodeType":"Identifier","endLine":116,"endColumn":70},{"ruleId":"prefer-const","severity":2,"message":"'newFileName' is never reassigned. Use 'const' instead.","line":119,"column":15,"nodeType":"Identifier","endLine":119,"endColumn":26,"fix":{"range":[4336,4339],"text":"const"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":120,"column":69,"nodeType":"FunctionExpression","endLine":165,"endColumn":12},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":120,"column":69,"nodeType":"FunctionExpression","endLine":165,"endColumn":12,"fix":{"range":[4440,6433],"text":"(err) => {\n              if (err) next(err);\n\n              let local_url = 'http://' + request.headers.host + '/download/LOCAL/' + newFileName;\n                internetAvailable().then(function(){\n                    fs.readFile(localFileDir + newFileName, (err, data) => {\n                       if (err) throw err;\n\n                       // deleting existing file from s3\n                       s3.deleteObject({Bucket: s3_bucket,Key: fields.old_file}, function (err, data) {\n                         console.log('Deleting existing file');\n                       });\n\n\n                       const params = {\n                           Bucket: s3_bucket,\n                           Key: newFileName,\n                           Body: data,\n                           ACL: 'public-read',\n                           ContentType: files.file.type\n                       };\n                       s3.upload(params, function(s3Err, uploadData) {\n                           if (s3Err) throw s3Err\n                           uploadData.local_url = local_url\n\n                           response.send(\n                              {\n                                'data': uploadData,\n                                'success': true,\n                                'msg': 'File is updated & uploaded to s3 successfully'\n                              }\n                            );\n                       });\n                    });\n                }).catch(function(){\n                    let localUploadData = {'local_url': local_url, 'Location': fields.s3_url, 'Key': newFileName}\n                    response.send(\n                      {\n                        'data': localUploadData,\n                        'success': true,\n                        'msg': 'File is updated & uploaded to local disk successfully',\n                        'connectivityProb': 'It seems internet connection is not available'\n                      }\n                    );\n                });\n          }"}},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":120,"column":78,"nodeType":"Identifier","endLine":120,"endColumn":81},{"ruleId":"no-undef","severity":2,"message":"'next' is not defined.","line":121,"column":24,"nodeType":"Identifier","endLine":121,"endColumn":28},{"ruleId":"camelcase","severity":2,"message":"Identifier 'local_url' is not in camel case.","line":123,"column":19,"nodeType":"Identifier","messageId":"notCamelCase","endLine":123,"endColumn":28},{"ruleId":"prefer-const","severity":2,"message":"'local_url' is never reassigned. Use 'const' instead.","line":123,"column":19,"nodeType":"Identifier","endLine":123,"endColumn":28,"fix":{"range":[4505,4508],"text":"const"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":123,"column":31,"nodeType":"BinaryExpression","endLine":123,"endColumn":98,"fix":{"range":[4521,4588],"text":"`http://${  request.headers.host  }/download/LOCAL/${  newFileName}`"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":124,"column":42,"nodeType":"FunctionExpression","endLine":154,"endColumn":18},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":124,"column":42,"nodeType":"FunctionExpression","endLine":154,"endColumn":18,"fix":{"range":[4631,5892],"text":"() => {\n                    fs.readFile(localFileDir + newFileName, (err, data) => {\n                       if (err) throw err;\n\n                       // deleting existing file from s3\n                       s3.deleteObject({Bucket: s3_bucket,Key: fields.old_file}, function (err, data) {\n                         console.log('Deleting existing file');\n                       });\n\n\n                       const params = {\n                           Bucket: s3_bucket,\n                           Key: newFileName,\n                           Body: data,\n                           ACL: 'public-read',\n                           ContentType: files.file.type\n                       };\n                       s3.upload(params, function(s3Err, uploadData) {\n                           if (s3Err) throw s3Err\n                           uploadData.local_url = local_url\n\n                           response.send(\n                              {\n                                'data': uploadData,\n                                'success': true,\n                                'msg': 'File is updated & uploaded to s3 successfully'\n                              }\n                            );\n                       });\n                    });\n                }"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":124,"column":42,"nodeType":"FunctionExpression","endLine":154,"endColumn":18},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":125,"column":62,"nodeType":"Identifier","endLine":125,"endColumn":65},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":129,"column":82,"nodeType":"FunctionExpression","endLine":131,"endColumn":25},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":129,"column":82,"nodeType":"FunctionExpression","endLine":131,"endColumn":25,"fix":{"range":[4902,5013],"text":"(err, data) => {\n                         console.log('Deleting existing file');\n                       }"}},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":129,"column":92,"nodeType":"Identifier","endLine":129,"endColumn":95},{"ruleId":"no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":129,"column":92,"nodeType":"Identifier","endLine":129,"endColumn":95},{"ruleId":"no-shadow","severity":2,"message":"'data' is already declared in the upper scope.","line":129,"column":97,"nodeType":"Identifier","endLine":129,"endColumn":101},{"ruleId":"no-unused-vars","severity":2,"message":"'data' is defined but never used.","line":129,"column":97,"nodeType":"Identifier","endLine":129,"endColumn":101},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":141,"column":42,"nodeType":"FunctionExpression","endLine":152,"endColumn":25},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":141,"column":42,"nodeType":"FunctionExpression","endLine":152,"endColumn":25,"fix":{"range":[5358,5848],"text":"(s3Err, uploadData) => {\n                           if (s3Err) throw s3Err\n                           uploadData.local_url = local_url\n\n                           response.send(\n                              {\n                                'data': uploadData,\n                                'success': true,\n                                'msg': 'File is updated & uploaded to s3 successfully'\n                              }\n                            );\n                       }"}},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'uploadData'.","line":143,"column":28,"nodeType":"Identifier","endLine":143,"endColumn":38},{"ruleId":"camelcase","severity":2,"message":"Identifier 'local_url' is not in camel case.","line":143,"column":51,"nodeType":"Identifier","messageId":"notCamelCase","endLine":143,"endColumn":60},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":154,"column":26,"nodeType":"FunctionExpression","endLine":164,"endColumn":18},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":154,"column":26,"nodeType":"FunctionExpression","endLine":164,"endColumn":18,"fix":{"range":[5900,6419],"text":"() => {\n                    let localUploadData = {'local_url': local_url, 'Location': fields.s3_url, 'Key': newFileName}\n                    response.send(\n                      {\n                        'data': localUploadData,\n                        'success': true,\n                        'msg': 'File is updated & uploaded to local disk successfully',\n                        'connectivityProb': 'It seems internet connection is not available'\n                      }\n                    );\n                }"}},{"ruleId":"prefer-const","severity":2,"message":"'localUploadData' is never reassigned. Use 'const' instead.","line":155,"column":25,"nodeType":"Identifier","endLine":155,"endColumn":40,"fix":{"range":[5932,5935],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'params' is never reassigned. Use 'const' instead.","line":172,"column":7,"nodeType":"Identifier","endLine":172,"endColumn":13,"fix":{"range":[6530,6533],"text":"const"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":175,"column":26,"nodeType":"FunctionExpression","endLine":180,"endColumn":3},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":175,"column":26,"nodeType":"FunctionExpression","endLine":180,"endColumn":3,"fix":{"range":[6597,6703],"text":"(err, data) => {\n   if (err) console.log(err, err.stack);\n   else {\n     response.send(data);\n   }\n }"}},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":185,"column":3,"nodeType":"ExpressionStatement","endLine":189,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'Upload' is not defined.","line":185,"column":3,"nodeType":"Identifier","endLine":185,"endColumn":9},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":185,"column":58,"nodeType":"ArrowFunctionExpression","endLine":187,"endColumn":4},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":195,"column":7,"nodeType":"VariableDeclarator","endLine":195,"endColumn":43},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":195,"column":7,"nodeType":"Identifier","messageId":"notCamelCase","endLine":195,"endColumn":16},{"ruleId":"prefer-const","severity":2,"message":"'file_name' is never reassigned. Use 'const' instead.","line":195,"column":7,"nodeType":"Identifier","endLine":195,"endColumn":16,"fix":{"range":[7045,7048],"text":"const"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_path' is not in camel case.","line":196,"column":7,"nodeType":"Identifier","messageId":"notCamelCase","endLine":196,"endColumn":16},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":197,"column":31,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":198,"column":30,"nodeType":"FunctionExpression","endLine":201,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":198,"column":30,"nodeType":"FunctionExpression","endLine":201,"endColumn":6,"fix":{"range":[7174,7306],"text":"() => {\n      file_path = \"https://\"+s3_bucket+\".s3.amazonaws.com/\"+file_name;\n      requestVar(file_path).pipe(response);\n    }"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":198,"column":30,"nodeType":"FunctionExpression","endLine":201,"endColumn":6},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_path' is not in camel case.","line":199,"column":7,"nodeType":"Identifier","messageId":"notCamelCase","endLine":199,"endColumn":16},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":199,"column":19,"nodeType":"BinaryExpression","endLine":199,"endColumn":70,"fix":{"range":[7204,7255],"text":"`https://${s3_bucket}.s3.amazonaws.com/${file_name}`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 's3_bucket' is not in camel case.","line":199,"column":30,"nodeType":"Identifier","messageId":"notCamelCase","endLine":199,"endColumn":39},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":199,"column":61,"nodeType":"Identifier","messageId":"notCamelCase","endLine":199,"endColumn":70},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":201,"column":14,"nodeType":"FunctionExpression","endLine":208,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":201,"column":14,"nodeType":"FunctionExpression","endLine":208,"endColumn":6,"fix":{"range":[7314,7560],"text":"() => {\n      if (fs.existsSync(\"./uploads/\"+file_name)) {\n        file_path = \"./uploads/\"+file_name;\n        response.download(file_path);\n      } else {\n        response.send({'err': 'This file was not found in local disk'});\n      }\n    }"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":202,"column":25,"nodeType":"BinaryExpression","endLine":202,"endColumn":47,"fix":{"range":[7350,7372],"text":"`./uploads/${file_name}`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":202,"column":38,"nodeType":"Identifier","messageId":"notCamelCase","endLine":202,"endColumn":47},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_path' is not in camel case.","line":203,"column":9,"nodeType":"Identifier","messageId":"notCamelCase","endLine":203,"endColumn":18},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":203,"column":21,"nodeType":"BinaryExpression","endLine":203,"endColumn":43,"fix":{"range":[7397,7419],"text":"`./uploads/${file_name}`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":203,"column":34,"nodeType":"Identifier","messageId":"notCamelCase","endLine":203,"endColumn":43},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":210,"column":5,"nodeType":"IfStatement","endLine":215,"endColumn":6,"fix":{"range":[7572,7794],"text":"if (fs.existsSync(\"./uploads/\"+file_name)) {\n      file_path = \"./uploads/\"+file_name;\n      response.download(file_path);\n    } else {\n      response.send({'err': 'This file was not found in local disk'});\n    }"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":210,"column":23,"nodeType":"BinaryExpression","endLine":210,"endColumn":45,"fix":{"range":[7596,7618],"text":"`./uploads/${file_name}`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":210,"column":36,"nodeType":"Identifier","messageId":"notCamelCase","endLine":210,"endColumn":45},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_path' is not in camel case.","line":211,"column":7,"nodeType":"Identifier","messageId":"notCamelCase","endLine":211,"endColumn":16},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":211,"column":19,"nodeType":"BinaryExpression","endLine":211,"endColumn":41,"fix":{"range":[7641,7663],"text":"`./uploads/${file_name}`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":211,"column":32,"nodeType":"Identifier","messageId":"notCamelCase","endLine":211,"endColumn":41},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":221,"column":7,"nodeType":"VariableDeclarator","endLine":221,"endColumn":29},{"ruleId":"no-unused-vars","severity":2,"message":"'id' is assigned a value but never used.","line":221,"column":7,"nodeType":"Identifier","endLine":221,"endColumn":9},{"ruleId":"prefer-const","severity":2,"message":"'id' is never reassigned. Use 'const' instead.","line":221,"column":7,"nodeType":"Identifier","endLine":221,"endColumn":9,"fix":{"range":[7868,7871],"text":"const"}},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":222,"column":7,"nodeType":"VariableDeclarator","endLine":222,"endColumn":41},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":222,"column":7,"nodeType":"Identifier","messageId":"notCamelCase","endLine":222,"endColumn":16},{"ruleId":"prefer-const","severity":2,"message":"'file_name' is never reassigned. Use 'const' instead.","line":222,"column":7,"nodeType":"Identifier","endLine":222,"endColumn":16,"fix":{"range":[7898,7901],"text":"const"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":224,"column":13,"nodeType":"BinaryExpression","endLine":224,"endColumn":43,"fix":{"range":[7977,8007],"text":"`${localFileDir  }/${  file_name}`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":224,"column":34,"nodeType":"Identifier","messageId":"notCamelCase","endLine":224,"endColumn":43},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":224,"column":44,"nodeType":"FunctionExpression","endLine":248,"endColumn":4},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":224,"column":44,"nodeType":"FunctionExpression","endLine":248,"endColumn":4,"fix":{"range":[8008,8912],"text":"(err) => {\n    if(err) {\n      if(err.errno == -2) {\n        notFoundOnLocalDisk = 'This file was not found in local disk';\n      }\n    }\n    let params = {\n        Bucket: s3_bucket,\n        Key: file_name\n    };\n    internetAvailable().then(function(){\n      s3.deleteObject(params, function (err, data) {\n          if (data) {\n              response.send({'success': true, 'msg': 'File deleted successfully from S3', 'connectivity': true, 'notFoundOnLocalDisk': notFoundOnLocalDisk});\n          }\n          else {\n              response.status(400).send({'success': false, 'msg': err});\n          }\n      });\n    }).catch(function(){\n        response.send(\n            {'success': true, 'msg': 'File deleted successfully from local disk', 'connectivityProb': 'It seems internet connection is not available', 'connectivity': false, 'notFoundOnLocalDisk': notFoundOnLocalDisk}\n        );\n    });\n  }"}},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":226,"column":20,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"prefer-const","severity":2,"message":"'params' is never reassigned. Use 'const' instead.","line":230,"column":9,"nodeType":"Identifier","endLine":230,"endColumn":15,"fix":{"range":[8154,8157],"text":"const"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":234,"column":30,"nodeType":"FunctionExpression","endLine":243,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":234,"column":30,"nodeType":"FunctionExpression","endLine":243,"endColumn":6,"fix":{"range":[8255,8629],"text":"() => {\n      s3.deleteObject(params, function (err, data) {\n          if (data) {\n              response.send({'success': true, 'msg': 'File deleted successfully from S3', 'connectivity': true, 'notFoundOnLocalDisk': notFoundOnLocalDisk});\n          }\n          else {\n              response.status(400).send({'success': false, 'msg': err});\n          }\n      });\n    }"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":234,"column":30,"nodeType":"FunctionExpression","endLine":243,"endColumn":6},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":235,"column":31,"nodeType":"FunctionExpression","endLine":242,"endColumn":8},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":235,"column":31,"nodeType":"FunctionExpression","endLine":242,"endColumn":8,"fix":{"range":[8297,8621],"text":"(err, data) => {\n          if (data) {\n              response.send({'success': true, 'msg': 'File deleted successfully from S3', 'connectivity': true, 'notFoundOnLocalDisk': notFoundOnLocalDisk});\n          }\n          else {\n              response.status(400).send({'success': false, 'msg': err});\n          }\n      }"}},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":235,"column":41,"nodeType":"Identifier","endLine":235,"endColumn":44},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":243,"column":14,"nodeType":"FunctionExpression","endLine":247,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":243,"column":14,"nodeType":"FunctionExpression","endLine":247,"endColumn":6,"fix":{"range":[8637,8906],"text":"() => {\n        response.send(\n            {'success': true, 'msg': 'File deleted successfully from local disk', 'connectivityProb': 'It seems internet connection is not available', 'connectivity': false, 'notFoundOnLocalDisk': notFoundOnLocalDisk}\n        );\n    }"}},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":253,"column":7,"nodeType":"VariableDeclarator","endLine":253,"endColumn":43},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_names' is not in camel case.","line":253,"column":7,"nodeType":"Identifier","messageId":"notCamelCase","endLine":253,"endColumn":17},{"ruleId":"prefer-const","severity":2,"message":"'file_names' is never reassigned. Use 'const' instead.","line":253,"column":7,"nodeType":"Identifier","endLine":253,"endColumn":17,"fix":{"range":[8993,8996],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'deleteObj' is never reassigned. Use 'const' instead.","line":254,"column":7,"nodeType":"Identifier","endLine":254,"endColumn":16,"fix":{"range":[9037,9040],"text":"const"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":255,"column":22,"nodeType":"FunctionExpression","endLine":261,"endColumn":4},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":255,"column":22,"nodeType":"FunctionExpression","endLine":261,"endColumn":4,"fix":{"range":[9078,9285],"text":"(item, i) => {\n    let file_name = item.file_name\n    fs.unlink(localFileDir + '/' + file_name,function(err){\n      if(err) return console.log(err);\n      deleteObj.push({Key : file_name});\n    });\n  }"}},{"ruleId":"no-unused-vars","severity":2,"message":"'i' is defined but never used.","line":255,"column":38,"nodeType":"Identifier","endLine":255,"endColumn":39},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":256,"column":9,"nodeType":"VariableDeclarator","endLine":256,"endColumn":35},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":256,"column":9,"nodeType":"Identifier","messageId":"notCamelCase","endLine":256,"endColumn":18},{"ruleId":"prefer-const","severity":2,"message":"'file_name' is never reassigned. Use 'const' instead.","line":256,"column":9,"nodeType":"Identifier","endLine":256,"endColumn":18,"fix":{"range":[9103,9106],"text":"const"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":257,"column":15,"nodeType":"BinaryExpression","endLine":257,"endColumn":45,"fix":{"range":[9148,9178],"text":"`${localFileDir  }/${  file_name}`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":257,"column":36,"nodeType":"Identifier","messageId":"notCamelCase","endLine":257,"endColumn":45},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":257,"column":46,"nodeType":"FunctionExpression","endLine":260,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":257,"column":46,"nodeType":"FunctionExpression","endLine":260,"endColumn":6,"fix":{"range":[9179,9279],"text":"(err) => {\n      if(err) return console.log(err);\n      deleteObj.push({Key : file_name});\n    }"}},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":263,"column":3,"nodeType":"VariableDeclaration","endLine":268,"endColumn":5},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":263,"column":3,"nodeType":"VariableDeclaration","endLine":268,"endColumn":5,"fix":{"range":[9291,9294],"text":"let"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":270,"column":28,"nodeType":"FunctionExpression","endLine":274,"endColumn":4},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":270,"column":28,"nodeType":"FunctionExpression","endLine":274,"endColumn":4,"fix":{"range":[9407,9599],"text":"() => {\n    s3.deleteObjects(params, function (err, data) {\n        response.send({'success': true, 'msg': 'All files are deleted successfully from S3', 'connectivity': true});\n    });\n  }"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":270,"column":28,"nodeType":"FunctionExpression","endLine":274,"endColumn":4},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":271,"column":30,"nodeType":"FunctionExpression","endLine":273,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":271,"column":30,"nodeType":"FunctionExpression","endLine":273,"endColumn":6,"fix":{"range":[9448,9593],"text":"(err, data) => {\n        response.send({'success': true, 'msg': 'All files are deleted successfully from S3', 'connectivity': true});\n    }"}},{"ruleId":"no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":271,"column":40,"nodeType":"Identifier","endLine":271,"endColumn":43},{"ruleId":"no-unused-vars","severity":2,"message":"'data' is defined but never used.","line":271,"column":45,"nodeType":"Identifier","endLine":271,"endColumn":49},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":274,"column":12,"nodeType":"FunctionExpression","endLine":278,"endColumn":4},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":274,"column":12,"nodeType":"FunctionExpression","endLine":278,"endColumn":4,"fix":{"range":[9607,9827],"text":"() => {\n    response.send(\n        {'success': true, 'msg': 'All files are deleted successfully from local disk', 'connectivityProb': 'It seems internet connection is not available', 'connectivity': false}\n    );\n  }"}},{"ruleId":"prefer-const","severity":2,"message":"'imageArr' is never reassigned. Use 'const' instead.","line":283,"column":9,"nodeType":"Identifier","endLine":283,"endColumn":17,"fix":{"range":[9929,9932],"text":"const"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":284,"column":19,"nodeType":"FunctionExpression","endLine":309,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":284,"column":19,"nodeType":"FunctionExpression","endLine":309,"endColumn":6,"fix":{"range":[9966,10770],"text":"(file, i) => {\n      if((/\\.(gif|jpg|jpeg|tiff|png)$/i).test(file)) {\n        imageArr.push(file);\n        let fn = './testImages/'+file;\n        let dn = './uploads/'+file;\n\n        fs.copyFile(fn,dn, (err) => {\n          fs.readFile(dn, (err, data) => {\n            const params = {\n                Bucket: s3_bucket,\n                Key: file,\n                Body: data,\n                ACL: 'public-read',\n                ContentType: 'image/jpeg'\n            };\n            s3.upload(params, function(s3Err, uploadData) {\n              if(files.length == (i+1)) {\n                response.send(\n                    {'success': true, 'msg': 'all files are uploaded', 'length': (i+1), 'files': imageArr}\n                );\n              }\n            });\n          });\n        });\n      }\n    }"}},{"ruleId":"prefer-const","severity":2,"message":"'fn' is never reassigned. Use 'const' instead.","line":287,"column":13,"nodeType":"Identifier","endLine":287,"endColumn":15,"fix":{"range":[10079,10082],"text":"const"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":287,"column":18,"nodeType":"BinaryExpression","endLine":287,"endColumn":38,"fix":{"range":[10088,10108],"text":"`./testImages/${file}`"}},{"ruleId":"prefer-const","severity":2,"message":"'dn' is never reassigned. Use 'const' instead.","line":288,"column":13,"nodeType":"Identifier","endLine":288,"endColumn":15,"fix":{"range":[10118,10121],"text":"const"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":288,"column":18,"nodeType":"BinaryExpression","endLine":288,"endColumn":35,"fix":{"range":[10127,10144],"text":"`./uploads/${file}`"}},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":290,"column":29,"nodeType":"Identifier","endLine":290,"endColumn":32},{"ruleId":"no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":290,"column":29,"nodeType":"Identifier","endLine":290,"endColumn":32},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":291,"column":28,"nodeType":"Identifier","endLine":291,"endColumn":31},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":299,"column":31,"nodeType":"FunctionExpression","endLine":305,"endColumn":14},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":299,"column":31,"nodeType":"FunctionExpression","endLine":305,"endColumn":14,"fix":{"range":[10470,10728],"text":"(s3Err, uploadData) => {\n              if(files.length == (i+1)) {\n                response.send(\n                    {'success': true, 'msg': 'all files are uploaded', 'length': (i+1), 'files': imageArr}\n                );\n              }\n            }"}},{"ruleId":"no-unused-vars","severity":2,"message":"'s3Err' is defined but never used.","line":299,"column":40,"nodeType":"Identifier","endLine":299,"endColumn":45},{"ruleId":"no-unused-vars","severity":2,"message":"'uploadData' is defined but never used.","line":299,"column":47,"nodeType":"Identifier","endLine":299,"endColumn":57},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":300,"column":31,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":314,"column":6,"nodeType":"Identifier","messageId":"notCamelCase","endLine":314,"endColumn":15},{"ruleId":"prefer-const","severity":2,"message":"'file_name' is never reassigned. Use 'const' instead.","line":314,"column":6,"nodeType":"Identifier","endLine":314,"endColumn":15,"fix":{"range":[10837,10840],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'params' is never reassigned. Use 'const' instead.","line":315,"column":6,"nodeType":"Identifier","endLine":315,"endColumn":12,"fix":{"range":[10863,10866],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'file' is never reassigned. Use 'const' instead.","line":320,"column":6,"nodeType":"Identifier","endLine":320,"endColumn":10,"fix":{"range":[10927,10930],"text":"const"}},{"ruleId":"global-require","severity":2,"message":"Unexpected require().","line":320,"column":13,"nodeType":"CallExpression","endLine":320,"endColumn":26},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":320,"column":58,"nodeType":"Identifier","messageId":"notCamelCase","endLine":320,"endColumn":67},{"ruleId":"camelcase","severity":2,"message":"Identifier 's3_url' is not in camel case.","line":323,"column":6,"nodeType":"Identifier","messageId":"notCamelCase","endLine":323,"endColumn":12},{"ruleId":"prefer-const","severity":2,"message":"'s3_url' is never reassigned. Use 'const' instead.","line":323,"column":6,"nodeType":"Identifier","endLine":323,"endColumn":12,"fix":{"range":[11050,11053],"text":"const"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":323,"column":15,"nodeType":"BinaryExpression","endLine":323,"endColumn":66,"fix":{"range":[11063,11114],"text":"`https://${s3_bucket}.s3.amazonaws.com/${file_name}`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 's3_bucket' is not in camel case.","line":323,"column":26,"nodeType":"Identifier","messageId":"notCamelCase","endLine":323,"endColumn":35},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":323,"column":57,"nodeType":"Identifier","messageId":"notCamelCase","endLine":323,"endColumn":66},{"ruleId":"camelcase","severity":2,"message":"Identifier 'local_url' is not in camel case.","line":324,"column":6,"nodeType":"Identifier","messageId":"notCamelCase","endLine":324,"endColumn":15},{"ruleId":"prefer-const","severity":2,"message":"'local_url' is never reassigned. Use 'const' instead.","line":324,"column":6,"nodeType":"Identifier","endLine":324,"endColumn":15,"fix":{"range":[11117,11120],"text":"const"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":324,"column":18,"nodeType":"BinaryExpression","endLine":324,"endColumn":67,"fix":{"range":[11133,11182],"text":"`http://${  host  }/download/LOCAL/${  file_name}`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":324,"column":58,"nodeType":"Identifier","messageId":"notCamelCase","endLine":324,"endColumn":67},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_size' is not in camel case.","line":325,"column":6,"nodeType":"Identifier","messageId":"notCamelCase","endLine":325,"endColumn":15},{"ruleId":"prefer-const","severity":2,"message":"'file_size' is never reassigned. Use 'const' instead.","line":325,"column":6,"nodeType":"Identifier","endLine":325,"endColumn":15,"fix":{"range":[11185,11188],"text":"const"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'uploaded_on' is not in camel case.","line":326,"column":6,"nodeType":"Identifier","messageId":"notCamelCase","endLine":326,"endColumn":17},{"ruleId":"prefer-const","severity":2,"message":"'uploaded_on' is never reassigned. Use 'const' instead.","line":326,"column":6,"nodeType":"Identifier","endLine":326,"endColumn":17,"fix":{"range":[11212,11215],"text":"const"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_type' is not in camel case.","line":327,"column":6,"nodeType":"Identifier","messageId":"notCamelCase","endLine":327,"endColumn":15},{"ruleId":"prefer-const","severity":2,"message":"'file_type' is never reassigned. Use 'const' instead.","line":327,"column":6,"nodeType":"Identifier","endLine":327,"endColumn":15,"fix":{"range":[11290,11293],"text":"const"}},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":328,"column":6,"nodeType":"VariableDeclarator","endLine":328,"endColumn":20},{"ruleId":"prefer-const","severity":2,"message":"'_id' is never reassigned. Use 'const' instead.","line":328,"column":6,"nodeType":"Identifier","endLine":328,"endColumn":9,"fix":{"range":[11332,11335],"text":"const"}},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":330,"column":10,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":331,"column":18,"nodeType":"BinaryExpression","endLine":331,"endColumn":336,"fix":{"range":[11391,11709],"text":"`INSERT into s3_uploaders(_id, s3_url, local_url, file_name, file_size, file_type, uploaded_on, action_type, createdAt, updatedAt, connectivity) VALUES ('${_id}', '${s3_url}', '${local_url}', '${file_name}', '${file_size}', '${file_type}', '${uploaded_on}', 'NEW_FILE', '${uploaded_on}', '${uploaded_on}', 1)`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 's3_url' is not in camel case.","line":331,"column":185,"nodeType":"Identifier","messageId":"notCamelCase","endLine":331,"endColumn":191},{"ruleId":"camelcase","severity":2,"message":"Identifier 'local_url' is not in camel case.","line":331,"column":199,"nodeType":"Identifier","messageId":"notCamelCase","endLine":331,"endColumn":208},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":331,"column":216,"nodeType":"Identifier","messageId":"notCamelCase","endLine":331,"endColumn":225},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_size' is not in camel case.","line":331,"column":233,"nodeType":"Identifier","messageId":"notCamelCase","endLine":331,"endColumn":242},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_type' is not in camel case.","line":331,"column":250,"nodeType":"Identifier","messageId":"notCamelCase","endLine":331,"endColumn":259},{"ruleId":"camelcase","severity":2,"message":"Identifier 'uploaded_on' is not in camel case.","line":331,"column":267,"nodeType":"Identifier","messageId":"notCamelCase","endLine":331,"endColumn":278},{"ruleId":"camelcase","severity":2,"message":"Identifier 'uploaded_on' is not in camel case.","line":331,"column":298,"nodeType":"Identifier","messageId":"notCamelCase","endLine":331,"endColumn":309},{"ruleId":"camelcase","severity":2,"message":"Identifier 'uploaded_on' is not in camel case.","line":331,"column":317,"nodeType":"Identifier","messageId":"notCamelCase","endLine":331,"endColumn":328},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":333,"column":18,"nodeType":"BinaryExpression","endLine":333,"endColumn":216,"fix":{"range":[11739,11937],"text":"`UPDATE s3_uploaders SET file_size = '${file_size}', file_type = '${file_type}', uploaded_on = '${uploaded_on}', updatedAt = '${uploaded_on}', connectivity = 1 WHERE file_name = '${file_name}'`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_size' is not in camel case.","line":333,"column":58,"nodeType":"Identifier","messageId":"notCamelCase","endLine":333,"endColumn":67},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_type' is not in camel case.","line":333,"column":87,"nodeType":"Identifier","messageId":"notCamelCase","endLine":333,"endColumn":96},{"ruleId":"camelcase","severity":2,"message":"Identifier 'uploaded_on' is not in camel case.","line":333,"column":118,"nodeType":"Identifier","messageId":"notCamelCase","endLine":333,"endColumn":129},{"ruleId":"camelcase","severity":2,"message":"Identifier 'uploaded_on' is not in camel case.","line":333,"column":149,"nodeType":"Identifier","messageId":"notCamelCase","endLine":333,"endColumn":160},{"ruleId":"camelcase","severity":2,"message":"Identifier 'file_name' is not in camel case.","line":333,"column":203,"nodeType":"Identifier","messageId":"notCamelCase","endLine":333,"endColumn":212},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":338,"column":22,"nodeType":"FunctionExpression","endLine":384,"endColumn":4},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":338,"column":22,"nodeType":"FunctionExpression","endLine":384,"endColumn":4,"fix":{"range":[12003,14128],"text":"((resolve, reject) => {\n      sqlite_db.all('SELECT * from s3_uploaders where connectivity = 0 order by uploaded_on DESC', (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          if(result.length) {\n            let k = 0;\n            result.forEach( (item) => {\n              if(item.action_type == 'NEW_FILE' || item.action_type == 'UPDATE_FILE') {\n                fs.readFile(localFileDir+item.file_name, (err, data) => {\n                   if (err) throw err;\n                   const params = {\n                       Bucket: s3_bucket,\n                       Key: item.file_name,\n                       Body: data,\n                       ACL: 'public-read',\n                       ContentType: item.file_type\n                   };\n                   s3.upload(params, function(s3Err, uploadData) {\n                       if (s3Err) throw s3Err\n                       console.log('Offline sync - File uploaded successfully');\n                       let uploaded_on = moment.utc().format('YYYY-MM-DD HH:mm:ss')\n                       sqlite_db.run(\"UPDATE s3_uploaders SET uploaded_on = '\"+uploaded_on+\"', updatedAt = '\"+uploaded_on+\"', connectivity = 1, s3_url ='\"+uploadData.Location+\"' WHERE file_name = '\"+item.file_name+\"'\");\n                   });\n                });\n              } else if(item.action_type == 'DELETE_FILE') {\n                let params = {\n                    Bucket: s3_bucket,\n                    Key: item.file_name\n                };\n                s3.deleteObject(params, function (err, data) {\n                  if (err) throw err\n                  console.log('Offline sync - File deleted successfully');\n                  sqlite_db.run(\"DELETE FROM s3_uploaders WHERE file_name = '\"+item.file_name+\"'\");\n                });\n              }\n              k++;\n              if(k == result.length) {\n                resolve({'success': true, 'msg': 'Sync completed', 'code': 201});\n              }\n            });\n          } else {\n            resolve({'success': true, 'msg': 'No files to update s3', 'code': 200});\n          }\n        }\n      });\n  })"}},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":343,"column":11,"nodeType":"IfStatement","endLine":381,"endColumn":12,"fix":{"range":[12206,14114],"text":"if(result.length) {\n            let k = 0;\n            result.forEach( (item) => {\n              if(item.action_type == 'NEW_FILE' || item.action_type == 'UPDATE_FILE') {\n                fs.readFile(localFileDir+item.file_name, (err, data) => {\n                   if (err) throw err;\n                   const params = {\n                       Bucket: s3_bucket,\n                       Key: item.file_name,\n                       Body: data,\n                       ACL: 'public-read',\n                       ContentType: item.file_type\n                   };\n                   s3.upload(params, function(s3Err, uploadData) {\n                       if (s3Err) throw s3Err\n                       console.log('Offline sync - File uploaded successfully');\n                       let uploaded_on = moment.utc().format('YYYY-MM-DD HH:mm:ss')\n                       sqlite_db.run(\"UPDATE s3_uploaders SET uploaded_on = '\"+uploaded_on+\"', updatedAt = '\"+uploaded_on+\"', connectivity = 1, s3_url ='\"+uploadData.Location+\"' WHERE file_name = '\"+item.file_name+\"'\");\n                   });\n                });\n              } else if(item.action_type == 'DELETE_FILE') {\n                let params = {\n                    Bucket: s3_bucket,\n                    Key: item.file_name\n                };\n                s3.deleteObject(params, function (err, data) {\n                  if (err) throw err\n                  console.log('Offline sync - File deleted successfully');\n                  sqlite_db.run(\"DELETE FROM s3_uploaders WHERE file_name = '\"+item.file_name+\"'\");\n                });\n              }\n              k++;\n              if(k == result.length) {\n                resolve({'success': true, 'msg': 'Sync completed', 'code': 201});\n              }\n            });\n          } else {\n            resolve({'success': true, 'msg': 'No files to update s3', 'code': 200});\n          }"}},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":346,"column":35,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":346,"column":69,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":347,"column":59,"nodeType":"Identifier","endLine":347,"endColumn":62},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":356,"column":38,"nodeType":"FunctionExpression","endLine":361,"endColumn":21},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":356,"column":38,"nodeType":"FunctionExpression","endLine":361,"endColumn":21,"fix":{"range":[12812,13293],"text":"(s3Err, uploadData) => {\n                       if (s3Err) throw s3Err\n                       console.log('Offline sync - File uploaded successfully');\n                       let uploaded_on = moment.utc().format('YYYY-MM-DD HH:mm:ss')\n                       sqlite_db.run(\"UPDATE s3_uploaders SET uploaded_on = '\"+uploaded_on+\"', updatedAt = '\"+uploaded_on+\"', connectivity = 1, s3_url ='\"+uploadData.Location+\"' WHERE file_name = '\"+item.file_name+\"'\");\n                   }"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'uploaded_on' is not in camel case.","line":359,"column":28,"nodeType":"Identifier","messageId":"notCamelCase","endLine":359,"endColumn":39},{"ruleId":"prefer-const","severity":2,"message":"'uploaded_on' is never reassigned. Use 'const' instead.","line":359,"column":28,"nodeType":"Identifier","endLine":359,"endColumn":39,"fix":{"range":[12992,12995],"text":"const"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":360,"column":38,"nodeType":"BinaryExpression","endLine":360,"endColumn":218,"fix":{"range":[13090,13270],"text":"`UPDATE s3_uploaders SET uploaded_on = '${uploaded_on}', updatedAt = '${uploaded_on}', connectivity = 1, s3_url ='${uploadData.Location}' WHERE file_name = '${item.file_name}'`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'uploaded_on' is not in camel case.","line":360,"column":80,"nodeType":"Identifier","messageId":"notCamelCase","endLine":360,"endColumn":91},{"ruleId":"camelcase","severity":2,"message":"Identifier 'uploaded_on' is not in camel case.","line":360,"column":111,"nodeType":"Identifier","messageId":"notCamelCase","endLine":360,"endColumn":122},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":363,"column":42,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"prefer-const","severity":2,"message":"'params' is never reassigned. Use 'const' instead.","line":364,"column":21,"nodeType":"Identifier","endLine":364,"endColumn":27,"fix":{"range":[13393,13396],"text":"const"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":368,"column":41,"nodeType":"FunctionExpression","endLine":372,"endColumn":18},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":368,"column":41,"nodeType":"FunctionExpression","endLine":372,"endColumn":18,"fix":{"range":[13546,13798],"text":"(err, data) => {\n                  if (err) throw err\n                  console.log('Offline sync - File deleted successfully');\n                  sqlite_db.run(\"DELETE FROM s3_uploaders WHERE file_name = '\"+item.file_name+\"'\");\n                }"}},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":368,"column":51,"nodeType":"Identifier","endLine":368,"endColumn":54},{"ruleId":"no-unused-vars","severity":2,"message":"'data' is defined but never used.","line":368,"column":56,"nodeType":"Identifier","endLine":368,"endColumn":60},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":371,"column":33,"nodeType":"BinaryExpression","endLine":371,"endColumn":98,"fix":{"range":[13713,13778],"text":"`DELETE FROM s3_uploaders WHERE file_name = '${item.file_name}'`"}},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":374,"column":15,"nodeType":"UpdateExpression","endLine":374,"endColumn":18},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":375,"column":20,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":387,"column":1,"nodeType":"Line","endLine":387,"endColumn":7,"fix":{"range":[14136,14136],"text":" "}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":389,"column":28,"nodeType":"FunctionExpression","endLine":462,"endColumn":4},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":389,"column":28,"nodeType":"FunctionExpression","endLine":462,"endColumn":4,"fix":{"range":[14210,17068],"text":"() => {\n    offlineSynchronization().then(function(result) {\n      setTimeout( () => {\n        let params = {\n          Bucket: s3_bucket\n        };\n\n        let sql = `SELECT * FROM s3_uploaders where is_deleted = 0 ORDER BY uploaded_on desc`;\n        sqlite_db.all(sql, [], (err, filesObjFromLocal) => {\n          if (err) {\n            throw err;\n          }\n\n          s3.listObjects(params, function(err, data) {\n             if (err) console.log(err, err.stack);\n             else {\n               let filesObjFromS3 = data.Contents;\n               let k = 1;\n               if(filesObjFromS3.length == 0) {\n                 response.send(\n                     {'success': true, 'msg': 'S3 Bucket is empty'}\n                 );\n               }\n               filesObjFromS3.forEach( (item, index) => {\n                 let foundValue = filesObjFromLocal.filter(obj=>obj.file_name===item.Key);\n\n                 if(foundValue.length > 0) {\n                   let s3_date = moment(getLocalTime(item.LastModified));\n                   let d1 = foundValue[0].uploaded_on.split('.')\n                   let local_date = moment(getLocalTime(d1[0]));\n                   let duration = moment.duration(s3_date.diff(local_date));\n                   let diffInSeconds = duration.asSeconds();\n                   if(diffInSeconds > 1) {\n                     downloadFilestoLocalDisk(item, request.headers.host, 'update');\n                     if(k === filesObjFromS3.length) {\n                       response.send(\n                           {'success': true, 'msg': 'Sync Completed', 'code': 100}\n                       );\n                     }\n                     k++;\n                   } else {\n                     if(k === filesObjFromS3.length) {\n                       response.send(\n                           {'success': true, 'msg': 'Sync Completed', 'code': 102}\n                       );\n\n                       // if(result.code == 201) {\n                       //   response.send(\n                       //       {'success': true, 'msg': result.msg, 'code': 102}\n                       //   );\n                       // } else {\n                       //   response.send(\n                       //       {'success': true, 'msg': 'Sync is up-to-date', 'code': 99}\n                       //   );\n                       // }\n                     }\n                     k++;\n                   }\n                 } else {\n                   downloadFilestoLocalDisk(item, request.headers.host, 'new');\n                   if(k === filesObjFromS3.length) {\n                     response.send(\n                         {'success': true, 'msg': 'Sync Completed', 'code': 101}\n                     );\n                   }\n                   k++;\n                 }\n               });\n             }\n          });\n        });\n      }, 5000);\n    });\n  }"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":389,"column":28,"nodeType":"FunctionExpression","endLine":462,"endColumn":4},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":390,"column":5,"nodeType":"ExpressionStatement","endLine":461,"endColumn":8},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":390,"column":35,"nodeType":"FunctionExpression","endLine":461,"endColumn":6},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":390,"column":35,"nodeType":"FunctionExpression","endLine":461,"endColumn":6,"fix":{"range":[14256,17062],"text":"(result) => {\n      setTimeout( () => {\n        let params = {\n          Bucket: s3_bucket\n        };\n\n        let sql = `SELECT * FROM s3_uploaders where is_deleted = 0 ORDER BY uploaded_on desc`;\n        sqlite_db.all(sql, [], (err, filesObjFromLocal) => {\n          if (err) {\n            throw err;\n          }\n\n          s3.listObjects(params, function(err, data) {\n             if (err) console.log(err, err.stack);\n             else {\n               let filesObjFromS3 = data.Contents;\n               let k = 1;\n               if(filesObjFromS3.length == 0) {\n                 response.send(\n                     {'success': true, 'msg': 'S3 Bucket is empty'}\n                 );\n               }\n               filesObjFromS3.forEach( (item, index) => {\n                 let foundValue = filesObjFromLocal.filter(obj=>obj.file_name===item.Key);\n\n                 if(foundValue.length > 0) {\n                   let s3_date = moment(getLocalTime(item.LastModified));\n                   let d1 = foundValue[0].uploaded_on.split('.')\n                   let local_date = moment(getLocalTime(d1[0]));\n                   let duration = moment.duration(s3_date.diff(local_date));\n                   let diffInSeconds = duration.asSeconds();\n                   if(diffInSeconds > 1) {\n                     downloadFilestoLocalDisk(item, request.headers.host, 'update');\n                     if(k === filesObjFromS3.length) {\n                       response.send(\n                           {'success': true, 'msg': 'Sync Completed', 'code': 100}\n                       );\n                     }\n                     k++;\n                   } else {\n                     if(k === filesObjFromS3.length) {\n                       response.send(\n                           {'success': true, 'msg': 'Sync Completed', 'code': 102}\n                       );\n\n                       // if(result.code == 201) {\n                       //   response.send(\n                       //       {'success': true, 'msg': result.msg, 'code': 102}\n                       //   );\n                       // } else {\n                       //   response.send(\n                       //       {'success': true, 'msg': 'Sync is up-to-date', 'code': 99}\n                       //   );\n                       // }\n                     }\n                     k++;\n                   }\n                 } else {\n                   downloadFilestoLocalDisk(item, request.headers.host, 'new');\n                   if(k === filesObjFromS3.length) {\n                     response.send(\n                         {'success': true, 'msg': 'Sync Completed', 'code': 101}\n                     );\n                   }\n                   k++;\n                 }\n               });\n             }\n          });\n        });\n      }, 5000);\n    }"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":390,"column":35,"nodeType":"FunctionExpression","endLine":461,"endColumn":6},{"ruleId":"no-unused-vars","severity":2,"message":"'result' is defined but never used.","line":390,"column":44,"nodeType":"Identifier","endLine":390,"endColumn":50},{"ruleId":"prefer-const","severity":2,"message":"'params' is never reassigned. Use 'const' instead.","line":392,"column":13,"nodeType":"Identifier","endLine":392,"endColumn":19,"fix":{"range":[14309,14312],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'sql' is never reassigned. Use 'const' instead.","line":396,"column":13,"nodeType":"Identifier","endLine":396,"endColumn":16,"fix":{"range":[14372,14375],"text":"const"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":402,"column":34,"nodeType":"FunctionExpression","endLine":458,"endColumn":12},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":402,"column":34,"nodeType":"FunctionExpression","endLine":458,"endColumn":12,"fix":{"range":[14610,17026],"text":"(err, data) => {\n             if (err) console.log(err, err.stack);\n             else {\n               let filesObjFromS3 = data.Contents;\n               let k = 1;\n               if(filesObjFromS3.length == 0) {\n                 response.send(\n                     {'success': true, 'msg': 'S3 Bucket is empty'}\n                 );\n               }\n               filesObjFromS3.forEach( (item, index) => {\n                 let foundValue = filesObjFromLocal.filter(obj=>obj.file_name===item.Key);\n\n                 if(foundValue.length > 0) {\n                   let s3_date = moment(getLocalTime(item.LastModified));\n                   let d1 = foundValue[0].uploaded_on.split('.')\n                   let local_date = moment(getLocalTime(d1[0]));\n                   let duration = moment.duration(s3_date.diff(local_date));\n                   let diffInSeconds = duration.asSeconds();\n                   if(diffInSeconds > 1) {\n                     downloadFilestoLocalDisk(item, request.headers.host, 'update');\n                     if(k === filesObjFromS3.length) {\n                       response.send(\n                           {'success': true, 'msg': 'Sync Completed', 'code': 100}\n                       );\n                     }\n                     k++;\n                   } else {\n                     if(k === filesObjFromS3.length) {\n                       response.send(\n                           {'success': true, 'msg': 'Sync Completed', 'code': 102}\n                       );\n\n                       // if(result.code == 201) {\n                       //   response.send(\n                       //       {'success': true, 'msg': result.msg, 'code': 102}\n                       //   );\n                       // } else {\n                       //   response.send(\n                       //       {'success': true, 'msg': 'Sync is up-to-date', 'code': 99}\n                       //   );\n                       // }\n                     }\n                     k++;\n                   }\n                 } else {\n                   downloadFilestoLocalDisk(item, request.headers.host, 'new');\n                   if(k === filesObjFromS3.length) {\n                     response.send(\n                         {'success': true, 'msg': 'Sync Completed', 'code': 101}\n                     );\n                   }\n                   k++;\n                 }\n               });\n             }\n          }"}},{"ruleId":"no-shadow","severity":2,"message":"'err' is already declared in the upper scope.","line":402,"column":43,"nodeType":"Identifier","endLine":402,"endColumn":46},{"ruleId":"prefer-const","severity":2,"message":"'filesObjFromS3' is never reassigned. Use 'const' instead.","line":405,"column":20,"nodeType":"Identifier","endLine":405,"endColumn":34,"fix":{"range":[14718,14721],"text":"const"}},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":407,"column":41,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"no-unused-vars","severity":2,"message":"'index' is defined but never used.","line":412,"column":47,"nodeType":"Identifier","endLine":412,"endColumn":52},{"ruleId":"prefer-const","severity":2,"message":"'foundValue' is never reassigned. Use 'const' instead.","line":413,"column":22,"nodeType":"Identifier","endLine":413,"endColumn":32,"fix":{"range":[15040,15043],"text":"const"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 's3_date' is not in camel case.","line":416,"column":24,"nodeType":"Identifier","messageId":"notCamelCase","endLine":416,"endColumn":31},{"ruleId":"prefer-const","severity":2,"message":"'s3_date' is never reassigned. Use 'const' instead.","line":416,"column":24,"nodeType":"Identifier","endLine":416,"endColumn":31,"fix":{"range":[15179,15182],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'d1' is never reassigned. Use 'const' instead.","line":417,"column":24,"nodeType":"Identifier","endLine":417,"endColumn":26,"fix":{"range":[15253,15256],"text":"const"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'local_date' is not in camel case.","line":418,"column":24,"nodeType":"Identifier","messageId":"notCamelCase","endLine":418,"endColumn":34},{"ruleId":"prefer-const","severity":2,"message":"'local_date' is never reassigned. Use 'const' instead.","line":418,"column":24,"nodeType":"Identifier","endLine":418,"endColumn":34,"fix":{"range":[15318,15321],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'duration' is never reassigned. Use 'const' instead.","line":419,"column":24,"nodeType":"Identifier","endLine":419,"endColumn":32,"fix":{"range":[15383,15386],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'diffInSeconds' is never reassigned. Use 'const' instead.","line":420,"column":24,"nodeType":"Identifier","endLine":420,"endColumn":37,"fix":{"range":[15460,15463],"text":"const"}},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":428,"column":22,"nodeType":"UpdateExpression","endLine":428,"endColumn":25},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":445,"column":22,"nodeType":"UpdateExpression","endLine":445,"endColumn":25},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":454,"column":20,"nodeType":"UpdateExpression","endLine":454,"endColumn":23},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":462,"column":12,"nodeType":"FunctionExpression","endLine":469,"endColumn":4},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":462,"column":12,"nodeType":"FunctionExpression","endLine":469,"endColumn":4,"fix":{"range":[17076,17234],"text":"() => {\n      response.send(\n        {\n          'success': false,\n          'msg': 'It seems internet connection is not available'\n        }\n      );\n  }"}}],"errorCount":242,"warningCount":34,"fixableErrorCount":109,"fixableWarningCount":0,"source":null},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/main.dev.js":{"size":2400,"mtime":1539630186000,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/main.dev.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/index.js":{"size":757,"mtime":1539608413000,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/index.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'sqlite' is assigned a value but never used.","line":10,"column":7,"nodeType":"Identifier","endLine":10,"endColumn":13}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/containers/UploadPage.js":{"size":231,"mtime":1539100603000,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/containers/UploadPage.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/components/preloader/preloader.js":{"size":620,"mtime":1539628288000,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/components/preloader/preloader.js","messages":[{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":10,"column":25,"nodeType":"JSXOpeningElement","endLine":10,"endColumn":136,"fix":{"range":[523,533],"text":" />"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/components/Upload.js":{"size":26797,"mtime":1626023599581,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/components/Upload.js","messages":[{"ruleId":"prefer-const","severity":2,"message":"'id' is never reassigned. Use 'const' instead.","line":68,"column":9,"nodeType":"Identifier","endLine":68,"endColumn":11,"fix":{"range":[2135,2138],"text":"const"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":68,"column":14,"nodeType":"MemberExpression","endLine":68,"endColumn":34},{"ruleId":"prefer-const","severity":2,"message":"'rowIndex' is never reassigned. Use 'const' instead.","line":69,"column":9,"nodeType":"Identifier","endLine":69,"endColumn":17,"fix":{"range":[2170,2173],"text":"const"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":69,"column":20,"nodeType":"MemberExpression","endLine":69,"endColumn":46},{"ruleId":"camelcase","severity":2,"message":"Identifier 'delete_id' is not in camel case.","line":71,"column":11,"nodeType":"Identifier","messageId":"notCamelCase","endLine":71,"endColumn":20},{"ruleId":"camelcase","severity":2,"message":"Identifier 'delete_id' is not in camel case.","line":72,"column":9,"nodeType":"Identifier","messageId":"notCamelCase","endLine":72,"endColumn":18},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":72,"column":19,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":73,"column":7,"nodeType":"ExpressionStatement","endLine":144,"endColumn":10},{"ruleId":"prefer-const","severity":2,"message":"'fileNamesObj' is never reassigned. Use 'const' instead.","line":74,"column":13,"nodeType":"Identifier","endLine":74,"endColumn":25,"fix":{"range":[2381,2384],"text":"const"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":78,"column":9,"nodeType":"IfStatement","endLine":143,"endColumn":10},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":79,"column":29,"nodeType":"BinaryExpression","endLine":79,"endColumn":57,"fix":{"range":[2571,2599],"text":"`${this.base_url  }delete-all`"}},{"ruleId":"no-shadow","severity":2,"message":"'deleteUrl' is already declared in the upper scope.","line":90,"column":21,"nodeType":"Identifier","endLine":90,"endColumn":30},{"ruleId":"no-unused-vars","severity":2,"message":"'deleteUrl' is assigned a value but never used.","line":90,"column":21,"nodeType":"Identifier","endLine":90,"endColumn":30},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":90,"column":33,"nodeType":"BinaryExpression","endLine":90,"endColumn":67,"fix":{"range":[2961,2995],"text":"`${this.base_url  }upload/idnotneed`"}},{"ruleId":"no-shadow","severity":2,"message":"'httpReqHeaders' is already declared in the upper scope.","line":91,"column":21,"nodeType":"Identifier","endLine":91,"endColumn":35},{"ruleId":"no-unused-vars","severity":2,"message":"'httpReqHeaders' is assigned a value but never used.","line":91,"column":21,"nodeType":"Identifier","endLine":91,"endColumn":35},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":95,"column":15,"nodeType":"IfStatement","endLine":126,"endColumn":16},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":96,"column":17,"nodeType":"ExpressionStatement","endLine":107,"endColumn":20},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":97,"column":19,"nodeType":"IfStatement","endLine":106,"endColumn":20},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":98,"column":21,"nodeType":"MemberExpression","endLine":98,"endColumn":43},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":99,"column":50,"nodeType":"MemberExpression","endLine":99,"endColumn":72},{"ruleId":"react/no-access-state-in-setstate","severity":2,"message":"Use callback in setState when referencing the previous state.","line":99,"column":50,"nodeType":"MemberExpression","endLine":99,"endColumn":60},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":114,"column":17,"nodeType":"ExpressionStatement","endLine":125,"endColumn":20},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":115,"column":19,"nodeType":"IfStatement","endLine":124,"endColumn":20},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":116,"column":21,"nodeType":"MemberExpression","endLine":116,"endColumn":43},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":117,"column":50,"nodeType":"MemberExpression","endLine":117,"endColumn":72},{"ruleId":"react/no-access-state-in-setstate","severity":2,"message":"Use callback in setState when referencing the previous state.","line":117,"column":50,"nodeType":"MemberExpression","endLine":117,"endColumn":60},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":146,"column":7,"nodeType":"ExpressionStatement","endLine":212,"endColumn":10},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":146,"column":65,"nodeType":"ArrowFunctionExpression","endLine":212,"endColumn":8},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":147,"column":27,"nodeType":"BinaryExpression","endLine":147,"endColumn":61,"fix":{"range":[5048,5082],"text":"`${this.base_url  }upload/idnotneed`"}},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":159,"column":15,"nodeType":"ExpressionStatement","endLine":170,"endColumn":17},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":160,"column":17,"nodeType":"ArrowFunctionExpression","endLine":169,"endColumn":18},{"ruleId":"no-unused-vars","severity":2,"message":"'deleteResp' is defined but never used.","line":160,"column":17,"nodeType":"Identifier","endLine":160,"endColumn":27},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":161,"column":19,"nodeType":"MemberExpression","endLine":161,"endColumn":41},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":162,"column":48,"nodeType":"MemberExpression","endLine":162,"endColumn":70},{"ruleId":"react/no-access-state-in-setstate","severity":2,"message":"Use callback in setState when referencing the previous state.","line":162,"column":48,"nodeType":"MemberExpression","endLine":162,"endColumn":58},{"ruleId":"prefer-const","severity":2,"message":"'deleteObj' is never reassigned. Use 'const' instead.","line":177,"column":19,"nodeType":"Identifier","endLine":177,"endColumn":28,"fix":{"range":[6166,6169],"text":"const"}},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":178,"column":15,"nodeType":"MemberExpression","endLine":178,"endColumn":28},{"ruleId":"camelcase","severity":2,"message":"Identifier 'delete_id' is not in camel case.","line":178,"column":31,"nodeType":"Identifier","messageId":"notCamelCase","endLine":178,"endColumn":40},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":182,"column":15,"nodeType":"ExpressionStatement","endLine":193,"endColumn":17},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":183,"column":17,"nodeType":"ArrowFunctionExpression","endLine":192,"endColumn":18},{"ruleId":"no-unused-vars","severity":2,"message":"'deleteResp' is defined but never used.","line":183,"column":17,"nodeType":"Identifier","endLine":183,"endColumn":27},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":184,"column":19,"nodeType":"MemberExpression","endLine":184,"endColumn":41},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":185,"column":48,"nodeType":"MemberExpression","endLine":185,"endColumn":70},{"ruleId":"react/no-access-state-in-setstate","severity":2,"message":"Use callback in setState when referencing the previous state.","line":185,"column":48,"nodeType":"MemberExpression","endLine":185,"endColumn":58},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":196,"column":13,"nodeType":"IfStatement","endLine":202,"endColumn":14},{"ruleId":"eqeqeq","severity":2,"message":"Expected '!==' and instead saw '!='.","line":196,"column":58,"nodeType":"BinaryExpression","messageId":"unexpected","fix":{"range":[6943,6945],"text":"!=="}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":223,"column":15,"nodeType":"MemberExpression","endLine":223,"endColumn":31},{"ruleId":"react/no-access-state-in-setstate","severity":2,"message":"Use callback in setState when referencing the previous state.","line":223,"column":15,"nodeType":"MemberExpression","endLine":223,"endColumn":25},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":225,"column":10,"nodeType":"MemberExpression","endLine":225,"endColumn":26},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":232,"column":16,"nodeType":"MemberExpression","endLine":232,"endColumn":33},{"ruleId":"react/no-access-state-in-setstate","severity":2,"message":"Use callback in setState when referencing the previous state.","line":232,"column":16,"nodeType":"MemberExpression","endLine":232,"endColumn":26},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":238,"column":5,"nodeType":"ExpressionStatement","endLine":266,"endColumn":8},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":239,"column":12,"nodeType":"BinaryExpression","endLine":239,"endColumn":34,"fix":{"range":[7812,7834],"text":"`${this.base_url  }sync`"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":242,"column":7,"nodeType":"IfStatement","endLine":265,"endColumn":8},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":245,"column":32,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":246,"column":32,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":247,"column":32,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":271,"column":5,"nodeType":"ExpressionStatement","endLine":298,"endColumn":10},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":272,"column":13,"nodeType":"BinaryExpression","endLine":272,"endColumn":35,"fix":{"range":[8637,8659],"text":"`${this.base_url  }dump`"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":273,"column":13,"nodeType":"ArrowFunctionExpression","endLine":287,"endColumn":8},{"ruleId":"prefer-const","severity":2,"message":"'model' is never reassigned. Use 'const' instead.","line":275,"column":15,"nodeType":"Identifier","endLine":275,"endColumn":20,"fix":{"range":[8747,8750],"text":"const"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":276,"column":21,"nodeType":"BinaryExpression","endLine":276,"endColumn":63,"fix":{"range":[8781,8823],"text":"`https://c3-demo.s3.amazonaws.com/${  file}`"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":277,"column":24,"nodeType":"BinaryExpression","endLine":277,"endColumn":58,"fix":{"range":[8848,8882],"text":"`${this.base_url  }download/${  file}`"}},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":285,"column":11,"nodeType":"ExpressionStatement","endLine":285,"endColumn":71},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":285,"column":57,"nodeType":"ArrowFunctionExpression","endLine":285,"endColumn":69},{"ruleId":"no-unused-vars","severity":2,"message":"'dbResp' is defined but never used.","line":285,"column":57,"nodeType":"Identifier","endLine":285,"endColumn":63},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":288,"column":13,"nodeType":"ArrowFunctionExpression","endLine":298,"endColumn":8},{"ruleId":"react/no-string-refs","severity":2,"message":"Using this.refs is deprecated.","line":302,"column":5,"nodeType":"MemberExpression","endLine":302,"endColumn":14},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":304,"column":21,"nodeType":"Property","endLine":304,"endColumn":39,"fix":{"range":[9595,9613],"text":"rowIndex"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 's3_url' is not in camel case.","line":307,"column":22,"nodeType":"Identifier","messageId":"notCamelCase","endLine":307,"endColumn":28},{"ruleId":"camelcase","severity":2,"message":"Identifier 'is_s3_url' is not in camel case.","line":308,"column":9,"nodeType":"Identifier","messageId":"notCamelCase","endLine":308,"endColumn":18},{"ruleId":"prefer-const","severity":2,"message":"'is_s3_url' is never reassigned. Use 'const' instead.","line":308,"column":9,"nodeType":"Identifier","endLine":308,"endColumn":18,"fix":{"range":[9658,9661],"text":"const"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 's3_url' is not in camel case.","line":308,"column":21,"nodeType":"Identifier","messageId":"notCamelCase","endLine":308,"endColumn":27},{"ruleId":"eqeqeq","severity":2,"message":"Expected '!==' and instead saw '!='.","line":308,"column":28,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"camelcase","severity":2,"message":"Identifier 'is_s3_url' is not in camel case.","line":309,"column":9,"nodeType":"Identifier","messageId":"notCamelCase","endLine":309,"endColumn":18},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":309,"column":19,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":316,"column":5,"nodeType":"ExpressionStatement","endLine":335,"endColumn":8},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":317,"column":12,"nodeType":"BinaryExpression","endLine":317,"endColumn":64,"fix":{"range":[9894,9946],"text":"`${this.base_url  }download/${  is_s3_url  }/${  file}`"}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'is_s3_url' is not in camel case.","line":317,"column":42,"nodeType":"Identifier","messageId":"notCamelCase","endLine":317,"endColumn":51},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":321,"column":7,"nodeType":"IfStatement","endLine":334,"endColumn":8},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'getLocalTime'.","line":338,"column":15,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":343,"endColumn":4},{"ruleId":"prefer-const","severity":2,"message":"'dateFormat' is never reassigned. Use 'const' instead.","line":339,"column":9,"nodeType":"Identifier","endLine":339,"endColumn":19,"fix":{"range":[10528,10531],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'testDateUtc' is never reassigned. Use 'const' instead.","line":340,"column":9,"nodeType":"Identifier","endLine":340,"endColumn":20,"fix":{"range":[10572,10575],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'localDate' is never reassigned. Use 'const' instead.","line":341,"column":9,"nodeType":"Identifier","endLine":341,"endColumn":18,"fix":{"range":[10610,10613],"text":"const"}},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":346,"column":5,"nodeType":"ExpressionStatement","endLine":352,"endColumn":8},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":346,"column":64,"nodeType":"ArrowFunctionExpression","endLine":352,"endColumn":6},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'item'.","line":348,"column":9,"nodeType":"Identifier","endLine":348,"endColumn":13},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to property of function parameter 'item'.","line":349,"column":9,"nodeType":"Identifier","endLine":349,"endColumn":13},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'getFileSize'.","line":355,"column":14,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":357,"endColumn":4},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":356,"column":12,"nodeType":"BinaryExpression","endLine":356,"endColumn":44,"fix":{"range":[11041,11073],"text":"`${Math.round(fsize / 1000)  } KB`"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":361,"column":16,"nodeType":"MemberExpression","endLine":361,"endColumn":33},{"ruleId":"react/no-access-state-in-setstate","severity":2,"message":"Use callback in setState when referencing the previous state.","line":361,"column":16,"nodeType":"MemberExpression","endLine":361,"endColumn":26},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":366,"column":12,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":375,"column":5,"nodeType":"VariableDeclaration","endLine":375,"endColumn":35},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":375,"column":5,"nodeType":"VariableDeclaration","endLine":375,"endColumn":35,"fix":{"range":[11478,11481],"text":"let"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":375,"column":19,"nodeType":"MemberExpression","endLine":375,"endColumn":34},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":385,"column":43,"nodeType":"UpdateExpression","endLine":385,"endColumn":46},{"ruleId":"no-loop-func","severity":2,"message":"Don't make functions within a loop.","line":387,"column":17,"nodeType":"ArrowFunctionExpression","endLine":445,"endColumn":12},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":388,"column":13,"nodeType":"IfStatement","endLine":444,"endColumn":14},{"ruleId":"eqeqeq","severity":2,"message":"Expected '!==' and instead saw '!='.","line":389,"column":44,"nodeType":"BinaryExpression","messageId":"unexpected","fix":{"range":[11938,11940],"text":"!=="}},{"ruleId":"prefer-const","severity":2,"message":"'res' is never reassigned. Use 'const' instead.","line":392,"column":19,"nodeType":"Identifier","endLine":392,"endColumn":22,"fix":{"range":[12022,12025],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'model' is never reassigned. Use 'const' instead.","line":393,"column":19,"nodeType":"Identifier","endLine":393,"endColumn":24,"fix":{"range":[12066,12069],"text":"const"}},{"ruleId":"eqeqeq","severity":2,"message":"Expected '!==' and instead saw '!='.","line":402,"column":57,"nodeType":"BinaryExpression","messageId":"unexpected","fix":{"range":[12430,12432],"text":"!=="}},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":411,"column":15,"nodeType":"ExpressionStatement","endLine":436,"endColumn":18},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":412,"column":17,"nodeType":"IfStatement","endLine":435,"endColumn":18},{"ruleId":"prefer-const","severity":2,"message":"'modelObj' is never reassigned. Use 'const' instead.","line":413,"column":23,"nodeType":"Identifier","endLine":413,"endColumn":31,"fix":{"range":[12805,12808],"text":"const"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":418,"column":19,"nodeType":"MemberExpression","endLine":418,"endColumn":41},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":419,"column":48,"nodeType":"MemberExpression","endLine":419,"endColumn":70},{"ruleId":"react/no-access-state-in-setstate","severity":2,"message":"Use callback in setState when referencing the previous state.","line":419,"column":48,"nodeType":"MemberExpression","endLine":419,"endColumn":58},{"ruleId":"react/no-string-refs","severity":2,"message":"Using this.refs is deprecated.","line":427,"column":21,"nodeType":"MemberExpression","endLine":427,"endColumn":30},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":434,"column":19,"nodeType":"UpdateExpression","endLine":434,"endColumn":22},{"ruleId":"prefer-const","severity":2,"message":"'ext' is never reassigned. Use 'const' instead.","line":460,"column":11,"nodeType":"Identifier","endLine":460,"endColumn":14,"fix":{"range":[14351,14354],"text":"const"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":460,"column":17,"nodeType":"MemberExpression","endLine":460,"endColumn":38},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":461,"column":11,"nodeType":"VariableDeclarator","endLine":461,"endColumn":43},{"ruleId":"camelcase","severity":2,"message":"Identifier 'update_id' is not in camel case.","line":461,"column":11,"nodeType":"Identifier","messageId":"notCamelCase","endLine":461,"endColumn":20},{"ruleId":"prefer-const","severity":2,"message":"'update_id' is never reassigned. Use 'const' instead.","line":461,"column":11,"nodeType":"Identifier","endLine":461,"endColumn":20,"fix":{"range":[14412,14415],"text":"const"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":461,"column":23,"nodeType":"MemberExpression","endLine":461,"endColumn":43},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":462,"column":7,"nodeType":"ExpressionStatement","endLine":543,"endColumn":10},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":462,"column":65,"nodeType":"ArrowFunctionExpression","endLine":543,"endColumn":8},{"ruleId":"prefer-const","severity":2,"message":"'fn' is never reassigned. Use 'const' instead.","line":463,"column":13,"nodeType":"Identifier","endLine":463,"endColumn":15,"fix":{"range":[14534,14537],"text":"const"}},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\..","line":463,"column":59,"nodeType":"Literal"},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":463,"column":67,"nodeType":"BinaryExpression","endLine":463,"endColumn":76,"fix":{"range":[14592,14601],"text":"`.${  ext}`"}},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":465,"column":21,"nodeType":"BinaryExpression","endLine":465,"endColumn":57,"fix":{"range":[14670,14706],"text":"`${this.base_url  }upload/idnotneeded`"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":467,"column":39,"nodeType":"MemberExpression","endLine":467,"endColumn":60},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":480,"column":13,"nodeType":"IfStatement","endLine":533,"endColumn":14},{"ruleId":"eqeqeq","severity":2,"message":"Expected '!==' and instead saw '!='.","line":481,"column":44,"nodeType":"BinaryExpression","messageId":"unexpected","fix":{"range":[15272,15274],"text":"!=="}},{"ruleId":"prefer-const","severity":2,"message":"'res' is never reassigned. Use 'const' instead.","line":484,"column":19,"nodeType":"Identifier","endLine":484,"endColumn":22,"fix":{"range":[15356,15359],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'model' is never reassigned. Use 'const' instead.","line":485,"column":19,"nodeType":"Identifier","endLine":485,"endColumn":24,"fix":{"range":[15400,15403],"text":"const"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":486,"column":22,"nodeType":"MemberExpression","endLine":486,"endColumn":42},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":490,"column":28,"nodeType":"MemberExpression","endLine":490,"endColumn":49},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":491,"column":28,"nodeType":"MemberExpression","endLine":491,"endColumn":49},{"ruleId":"eqeqeq","severity":2,"message":"Expected '!==' and instead saw '!='.","line":496,"column":57,"nodeType":"BinaryExpression","messageId":"unexpected","fix":{"range":[15873,15875],"text":"!=="}},{"ruleId":"promise/catch-or-return","severity":2,"message":"Expected catch() or return","line":505,"column":15,"nodeType":"ExpressionStatement","endLine":525,"endColumn":18},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":505,"column":64,"nodeType":"ArrowFunctionExpression","endLine":525,"endColumn":16},{"ruleId":"no-shadow","severity":2,"message":"'dbResp' is already declared in the upper scope.","line":505,"column":64,"nodeType":"Identifier","endLine":505,"endColumn":70},{"ruleId":"prefer-const","severity":2,"message":"'modelObj' is never reassigned. Use 'const' instead.","line":506,"column":21,"nodeType":"Identifier","endLine":506,"endColumn":29,"fix":{"range":[16219,16222],"text":"const"}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":511,"column":17,"nodeType":"MemberExpression","endLine":511,"endColumn":39},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":511,"column":40,"nodeType":"MemberExpression","endLine":511,"endColumn":59},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":512,"column":46,"nodeType":"MemberExpression","endLine":512,"endColumn":68},{"ruleId":"react/no-access-state-in-setstate","severity":2,"message":"Use callback in setState when referencing the previous state.","line":512,"column":46,"nodeType":"MemberExpression","endLine":512,"endColumn":56},{"ruleId":"react/no-string-refs","severity":2,"message":"Using this.refs is deprecated.","line":519,"column":17,"nodeType":"MemberExpression","endLine":519,"endColumn":26},{"ruleId":"prefer-const","severity":2,"message":"'selectedFilesObj' is never reassigned. Use 'const' instead.","line":548,"column":9,"nodeType":"Identifier","endLine":548,"endColumn":25,"fix":{"range":[17609,17612],"text":"const"}},{"ruleId":"prefer-const","severity":2,"message":"'fileNamesArr' is never reassigned. Use 'const' instead.","line":549,"column":9,"nodeType":"Identifier","endLine":549,"endColumn":21,"fix":{"range":[17652,17655],"text":"const"}},{"ruleId":"no-plusplus","severity":2,"message":"Unary operator '++' used.","line":550,"column":50,"nodeType":"UpdateExpression","endLine":550,"endColumn":53},{"ruleId":"class-methods-use-this","severity":2,"message":"Expected 'this' to be used by class method 'getSrc'.","line":572,"column":9,"nodeType":"FunctionExpression","messageId":"missingThis","endLine":580,"endColumn":4},{"ruleId":"eqeqeq","severity":2,"message":"Expected '!==' and instead saw '!='.","line":573,"column":28,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":574,"column":14,"nodeType":"BinaryExpression","endLine":574,"endColumn":65,"fix":{"range":[18259,18310],"text":"`../node-api/uploads/${  fn  }?v=${  Math.random()}`"}},{"ruleId":"no-else-return","severity":2,"message":"Unnecessary 'else' after 'return'.","line":575,"column":12,"nodeType":"IfStatement","messageId":"unexpected","endLine":579,"endColumn":6,"fix":{"range":[18199,18530],"text":"(fn, ft) {\n    if (ft.search('image') != -1) {\n      return '../node-api/uploads/' + fn + '?v=' + Math.random();\n    } if (ft.search('pdf') != -1) {\n      return '../resources/app-pdf-icon.png';\n    } else if (ft.search('msword') != -1 || ft.search('document') != -1) {\n      return '../resources/document-icon.png';\n    }\n  }"}},{"ruleId":"eqeqeq","severity":2,"message":"Expected '!==' and instead saw '!='.","line":575,"column":33,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"eqeqeq","severity":2,"message":"Expected '!==' and instead saw '!='.","line":577,"column":36,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"eqeqeq","severity":2,"message":"Expected '!==' and instead saw '!='.","line":577,"column":67,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":586,"column":19,"nodeType":"MemberExpression","endLine":586,"endColumn":36},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring props assignment","line":588,"column":22,"nodeType":"MemberExpression","endLine":588,"endColumn":42},{"ruleId":"react/prop-types","severity":2,"message":"'className' is missing in props validation","line":588,"column":33,"nodeType":"Identifier","endLine":588,"endColumn":42},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":591,"column":23,"nodeType":"MemberExpression","endLine":591,"endColumn":44},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":602,"column":19,"nodeType":"MemberExpression","endLine":602,"endColumn":35},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring props assignment","line":604,"column":22,"nodeType":"MemberExpression","endLine":604,"endColumn":42},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":612,"column":24,"nodeType":"MemberExpression","endLine":612,"endColumn":44},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":616,"column":24,"nodeType":"MemberExpression","endLine":616,"endColumn":44},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":620,"column":24,"nodeType":"MemberExpression","endLine":620,"endColumn":44},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":624,"column":24,"nodeType":"MemberExpression","endLine":624,"endColumn":44},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":628,"column":24,"nodeType":"MemberExpression","endLine":628,"endColumn":44},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":632,"column":24,"nodeType":"MemberExpression","endLine":632,"endColumn":44},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":637,"column":22,"nodeType":"MemberExpression","endLine":637,"endColumn":42},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":644,"column":10,"nodeType":"MemberExpression","endLine":644,"endColumn":32},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":647,"column":13,"nodeType":"JSXOpeningElement","endLine":647,"endColumn":52,"fix":{"range":[20815,20820],"text":" />"}},{"ruleId":"react/no-string-refs","severity":2,"message":"Using string literals in ref attributes is deprecated.","line":657,"column":17,"nodeType":"JSXAttribute","endLine":657,"endColumn":33},{"ruleId":"jsx-a11y/label-has-for","severity":2,"message":"Form label must have ALL of the following types of associated control: nesting, id","line":661,"column":15,"nodeType":"JSXOpeningElement","endLine":661,"endColumn":48},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":662,"column":18,"nodeType":"MemberExpression","endLine":662,"endColumn":37},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":663,"column":21,"nodeType":"MemberExpression","endLine":663,"endColumn":40},{"ruleId":"react/no-string-refs","severity":2,"message":"Using string literals in ref attributes is deprecated.","line":671,"column":15,"nodeType":"JSXAttribute","endLine":671,"endColumn":37},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":695,"column":19,"nodeType":"MemberExpression","endLine":695,"endColumn":41},{"ruleId":"react/jsx-curly-brace-presence","severity":2,"message":"Curly braces are unnecessary here.","line":698,"column":24,"nodeType":"JSXExpressionContainer","endLine":698,"endColumn":42,"fix":{"range":[22849,22867],"text":"\"No files found\""}},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":707,"column":25,"nodeType":"JSXOpeningElement","endLine":710,"endColumn":26},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Static HTML elements with event handlers require a role.","line":707,"column":25,"nodeType":"JSXOpeningElement","endLine":710,"endColumn":26},{"ruleId":"jsx-a11y/alt-text","severity":2,"message":"img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","line":711,"column":27,"nodeType":"JSXOpeningElement","endLine":718,"endColumn":29},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":742,"column":25,"nodeType":"JSXOpeningElement","endLine":747,"endColumn":26},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Static HTML elements with event handlers require a role.","line":742,"column":25,"nodeType":"JSXOpeningElement","endLine":747,"endColumn":26},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":745,"column":51,"nodeType":"MemberExpression","endLine":745,"endColumn":67},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":748,"column":27,"nodeType":"JSXOpeningElement","endLine":748,"endColumn":62,"fix":{"range":[24671,24676],"text":" />"}},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":751,"column":25,"nodeType":"JSXOpeningElement","endLine":756,"endColumn":26},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Static HTML elements with event handlers require a role.","line":751,"column":25,"nodeType":"JSXOpeningElement","endLine":756,"endColumn":26},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":754,"column":45,"nodeType":"MemberExpression","endLine":754,"endColumn":61},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":757,"column":27,"nodeType":"JSXOpeningElement","endLine":757,"endColumn":61,"fix":{"range":[25048,25053],"text":" />"}},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":760,"column":25,"nodeType":"JSXOpeningElement","endLine":768,"endColumn":26},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Static HTML elements with event handlers require a role.","line":760,"column":25,"nodeType":"JSXOpeningElement","endLine":768,"endColumn":26},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":769,"column":27,"nodeType":"JSXOpeningElement","endLine":769,"endColumn":69,"fix":{"range":[25543,25548],"text":" />"}},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","line":779,"column":34,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSingleBlock","fix":{"range":[25812,26741],"text":"(\n                <div className=\"uploaded-file-details d-flex align-items-center justify-content-around\">\n                  <Label>\n                    <small>S3 url : </small>\n                    <Link\n                      href=\"javascript:void(0);\"\n                      color=\"white\"\n                      onClick={() => this.openModal(row.original)}\n                    >\n                      {row.original.s3_url}\n                    </Link>\n                  </Label>\n                  <Label>\n                    <small>Local url : </small>\n                    <Link\n                      href=\"javascript:void(0);\"\n                      color=\"white\"\n                      onClick={() => this.openModal(row.original)}\n                    >\n                      {row.original.local_url}\n                    </Link>\n                  </Label>\n                </div>\n              )"}},{"ruleId":"no-script-url","severity":2,"message":"Script URL is a form of eval.","line":785,"column":28,"nodeType":"Literal","endLine":785,"endColumn":49},{"ruleId":"no-script-url","severity":2,"message":"Script URL is a form of eval.","line":795,"column":28,"nodeType":"Literal","endLine":795,"endColumn":49}],"errorCount":191,"warningCount":0,"fixableErrorCount":46,"fixableWarningCount":0,"source":null},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/components/S3UploaderModelOperations.js":{"size":1598,"mtime":1626023147184,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/components/S3UploaderModelOperations.js","messages":[{"ruleId":"import/newline-after-import","severity":2,"message":"Expected 1 empty line after require statement not followed by another require.","line":1,"column":1,"nodeType":null,"fix":{"range":[68,68],"text":"\n"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed async function.","line":3,"column":26,"nodeType":"FunctionExpression","endLine":8,"endColumn":2},{"ruleId":"no-return-await","severity":2,"message":"Redundant use of `await` on a return value.","line":4,"column":10,"nodeType":"Identifier","endLine":7,"endColumn":5},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed async function.","line":10,"column":30,"nodeType":"FunctionExpression","endLine":15,"endColumn":2},{"ruleId":"no-return-await","severity":2,"message":"Redundant use of `await` on a return value.","line":11,"column":10,"nodeType":"Identifier","endLine":14,"endColumn":4},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed async function.","line":17,"column":22,"nodeType":"FunctionExpression","endLine":19,"endColumn":2},{"ruleId":"no-return-await","severity":2,"message":"Redundant use of `await` on a return value.","line":18,"column":10,"nodeType":"Identifier","endLine":18,"endColumn":63},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed async function.","line":21,"column":22,"nodeType":"FunctionExpression","endLine":24,"endColumn":2},{"ruleId":"prefer-const","severity":2,"message":"'items' is never reassigned. Use 'const' instead.","line":22,"column":7,"nodeType":"Identifier","endLine":22,"endColumn":12,"fix":{"range":[562,565],"text":"const"}},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":22,"column":61,"nodeType":"MemberExpression","endLine":22,"endColumn":70},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":23,"column":46,"nodeType":"MemberExpression","endLine":23,"endColumn":55},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed async function.","line":26,"column":27,"nodeType":"FunctionExpression","endLine":29,"endColumn":2},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed async function.","line":31,"column":37,"nodeType":"FunctionExpression","endLine":45,"endColumn":2},{"ruleId":"no-return-await","severity":2,"message":"Redundant use of `await` on a return value.","line":32,"column":10,"nodeType":"Identifier","endLine":44,"endColumn":5},{"ruleId":"no-return-await","severity":2,"message":"Redundant use of `await` on a return value.","line":35,"column":14,"nodeType":"Identifier","endLine":40,"endColumn":9},{"ruleId":"no-unused-vars","severity":2,"message":"'item' is defined but never used.","line":38,"column":21,"nodeType":"Identifier","endLine":38,"endColumn":25},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","line":38,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"unexpectedSingleBlock","fix":{"range":[1143,1187],"text":"this.getAllFiles()"}},{"ruleId":"no-else-return","severity":2,"message":"Unnecessary 'else' after 'return'.","line":41,"column":12,"nodeType":"BlockStatement","messageId":"unexpected","endLine":43,"endColumn":6,"fix":{"range":[931,1245],"text":"async () => {\n    const items = await S3UploaderModel.findAll();\n    if (!items.length) {\n      return await S3UploaderModel.create({\n        s3_url: 'test',\n        local_url: 'test'\n      }).then(async item => {\n        return this.getAllFiles();\n      });\n    } \n      return this.getAllFiles();\n    \n  }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed async function.","line":47,"column":23,"nodeType":"FunctionExpression","endLine":58,"endColumn":2},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":60,"column":19,"nodeType":"FunctionExpression","endLine":62,"endColumn":2}],"errorCount":12,"warningCount":8,"fixableErrorCount":4,"fixableWarningCount":0,"source":null},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/components/S3UploaderModel.js":{"size":1282,"mtime":1626023226303,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/components/S3UploaderModel.js","messages":[{"ruleId":"import/newline-after-import","severity":2,"message":"Expected 1 empty line after require statement not followed by another require.","line":2,"column":1,"nodeType":null,"fix":{"range":[88,88],"text":"\n"}},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":23,"column":9,"nodeType":"ArrowFunctionExpression","endLine":25,"endColumn":4}],"errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/Routes.js":{"size":375,"mtime":1539151400000,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/app/Routes.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/yarn_vx.x.x.js":{"size":1319,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/yarn_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/webpack_v4.x.x.js":{"size":17013,"mtime":1626018101334,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/webpack_v4.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/webpack-merge_vx.x.x.js":{"size":1762,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/webpack-merge_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/webpack-dev-server_vx.x.x.js":{"size":11130,"mtime":1626018103550,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/webpack-dev-server_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/webpack-cli_vx.x.x.js":{"size":2410,"mtime":1626018103550,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/webpack-cli_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/webpack-bundle-analyzer_vx.x.x.js":{"size":8774,"mtime":1626018103550,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/webpack-bundle-analyzer_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/url-loader_vx.x.x.js":{"size":1346,"mtime":1626018103550,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/url-loader_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/uglifyjs-webpack-plugin_vx.x.x.js":{"size":2724,"mtime":1626018103550,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/uglifyjs-webpack-plugin_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/testcafe_v0.x.x.js":{"size":23356,"mtime":1626018101279,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/testcafe_v0.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/testcafe-react-selectors_vx.x.x.js":{"size":1041,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/testcafe-react-selectors_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/testcafe-live_vx.x.x.js":{"size":4798,"mtime":1626018103558,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/testcafe-live_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/testcafe-browser-provider-electron_vx.x.x.js":{"size":5606,"mtime":1626018103550,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/testcafe-browser-provider-electron_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/stylelint_vx.x.x.js":{"size":108999,"mtime":1626018103704,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/stylelint_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/stylelint-config-standard_vx.x.x.js":{"size":953,"mtime":1626018103390,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/stylelint-config-standard_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/stylelint-config-prettier_vx.x.x.js":{"size":1503,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/stylelint-config-prettier_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/style-loader_vx.x.x.js":{"size":1788,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/style-loader_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/spectron_vx.x.x.js":{"size":1965,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/spectron_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/source-map-support_vx.x.x.js":{"size":1374,"mtime":1626018103381,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/source-map-support_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/sinon_vx.x.x.js":{"size":11016,"mtime":1626018103743,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/sinon_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/sequelize_v4.x.x.js":{"size":225833,"mtime":1626018101224,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/sequelize_v4.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/sass-loader_vx.x.x.js":{"size":2211,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/sass-loader_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/rimraf_v2.x.x.js":{"size":505,"mtime":1626018101297,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/rimraf_v2.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/redux_v4.x.x.js":{"size":2439,"mtime":1626018100882,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/redux_v4.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/redux-thunk_vx.x.x.js":{"size":1886,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/redux-thunk_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/redux-logger_vx.x.x.js":{"size":1903,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/redux-logger_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/reactstrap_vx.x.x.js":{"size":56915,"mtime":1626018103549,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/reactstrap_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-toasts_vx.x.x.js":{"size":956,"mtime":1626018103473,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-toasts_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-test-renderer_v16.x.x.js":{"size":2494,"mtime":1626018101130,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-test-renderer_v16.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-table_vx.x.x.js":{"size":9588,"mtime":1626018103699,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-table_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-router_v4.x.x.js":{"size":3488,"mtime":1626018100759,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-router_v4.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-router-dom_v4.x.x.js":{"size":4720,"mtime":1626018100795,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-router-dom_v4.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-redux_v5.x.x.js":{"size":7568,"mtime":1626018100792,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-redux_v5.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-hot-loader_v4.x.x.js":{"size":1351,"mtime":1626018100972,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-hot-loader_v4.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-desktop_vx.x.x.js":{"size":39326,"mtime":1626018103772,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/react-desktop_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/prettier_v1.x.x.js":{"size":4953,"mtime":1626018101226,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/prettier_v1.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/optimize-css-assets-webpack-plugin_vx.x.x.js":{"size":6180,"mtime":1626018103738,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/optimize-css-assets-webpack-plugin_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/node-sass_vx.x.x.js":{"size":8474,"mtime":1626018103768,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/node-sass_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/mini-css-extract-plugin_vx.x.x.js":{"size":1477,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/mini-css-extract-plugin_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/lint-staged_vx.x.x.js":{"size":3126,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/lint-staged_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/jest_v23.x.x.js":{"size":34425,"mtime":1626018100969,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/jest_v23.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/identity-obj-proxy_vx.x.x.js":{"size":4419,"mtime":1626018103550,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/identity-obj-proxy_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/husky_vx.x.x.js":{"size":2424,"mtime":1626018103550,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/husky_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/history_v4.x.x.js":{"size":3719,"mtime":1626018100272,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/history_v4.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/flow-typed_vx.x.x.js":{"size":5545,"mtime":1626018103701,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/flow-typed_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/flow-runtime_vx.x.x.js":{"size":27560,"mtime":1626018103740,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/flow-runtime_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/flow-bin_v0.x.x.js":{"size":199,"mtime":1626018100675,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/flow-bin_v0.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/file-loader_vx.x.x.js":{"size":1122,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/file-loader_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/fbjs-scripts_vx.x.x.js":{"size":2903,"mtime":1626018103549,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/fbjs-scripts_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint_vx.x.x.js":{"size":77904,"mtime":1626018103699,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-testcafe_vx.x.x.js":{"size":931,"mtime":1626018103382,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-testcafe_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-react_vx.x.x.js":{"size":29605,"mtime":1626018103550,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-react_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-promise_vx.x.x.js":{"size":6492,"mtime":1626018103550,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-promise_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-jsx-a11y_vx.x.x.js":{"size":47297,"mtime":1626018103738,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-jsx-a11y_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-jest_vx.x.x.js":{"size":15662,"mtime":1626018103702,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-jest_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-import_vx.x.x.js":{"size":15739,"mtime":1626018103558,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-import_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-flowtype_vx.x.x.js":{"size":17260,"mtime":1626018103699,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-flowtype_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-compat_vx.x.x.js":{"size":3036,"mtime":1626018103562,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-plugin-compat_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-import-resolver-webpack_vx.x.x.js":{"size":1216,"mtime":1626018103392,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-import-resolver-webpack_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-formatter-pretty_vx.x.x.js":{"size":938,"mtime":1626018103381,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-formatter-pretty_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-config-prettier_vx.x.x.js":{"size":1995,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-config-prettier_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-config-airbnb_vx.x.x.js":{"size":2657,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/eslint-config-airbnb_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/enzyme_v3.x.x.js":{"size":4816,"mtime":1626018100558,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/enzyme_v3.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/enzyme-to-json_vx.x.x.js":{"size":2004,"mtime":1626018103382,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/enzyme-to-json_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/enzyme-adapter-react-16_vx.x.x.js":{"size":2985,"mtime":1626018103476,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/enzyme-adapter-react-16_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/electron_vx.x.x.js":{"size":1153,"mtime":1626018103782,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/electron_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/electron-rebuild_vx.x.x.js":{"size":2470,"mtime":1626018103765,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/electron-rebuild_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/electron-devtools-installer_vx.x.x.js":{"size":2452,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/electron-devtools-installer_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/electron-debug_vx.x.x.js":{"size":875,"mtime":1626018103381,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/electron-debug_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/electron-builder_vx.x.x.js":{"size":2099,"mtime":1626018103549,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/electron-builder_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/devtron_vx.x.x.js":{"size":1257,"mtime":1626018103699,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/devtron_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/detect-port_vx.x.x.js":{"size":1052,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/detect-port_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/css-loader_vx.x.x.js":{"size":2594,"mtime":1626018103549,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/css-loader_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/cross-spawn_vx.x.x.js":{"size":1858,"mtime":1626018103549,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/cross-spawn_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/cross-env_vx.x.x.js":{"size":1917,"mtime":1626018103550,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/cross-env_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/connected-react-router_vx.x.x.js":{"size":6466,"mtime":1626018103699,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/connected-react-router_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/concurrently_vx.x.x.js":{"size":2714,"mtime":1626018103549,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/concurrently_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/chalk_v2.x.x.js":{"size":2374,"mtime":1626018100274,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/chalk_v2.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/bootstrap_vx.x.x.js":{"size":6588,"mtime":1626018103699,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/bootstrap_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-register_v6.x.x.js":{"size":1532,"mtime":1626018100268,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-register_v6.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-preset-stage-0_vx.x.x.js":{"size":1010,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-preset-stage-0_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-preset-react_vx.x.x.js":{"size":994,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-preset-react_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-preset-react-optimize_vx.x.x.js":{"size":1065,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-preset-react-optimize_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-preset-env_vx.x.x.js":{"size":2856,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-preset-env_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-plugin-transform-es2015-classes_vx.x.x.js":{"size":1983,"mtime":1626018103549,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-plugin-transform-es2015-classes_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-plugin-transform-class-properties_vx.x.x.js":{"size":1162,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-plugin-transform-class-properties_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-plugin-flow-runtime_vx.x.x.js":{"size":161415,"mtime":1626018103770,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-plugin-flow-runtime_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-plugin-dev-expression_vx.x.x.js":{"size":962,"mtime":1626018103381,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-plugin-dev-expression_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-plugin-add-module-exports_vx.x.x.js":{"size":1339,"mtime":1626018103473,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-plugin-add-module-exports_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-loader_vx.x.x.js":{"size":1957,"mtime":1626018103549,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-loader_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-jest_vx.x.x.js":{"size":940,"mtime":1626018103474,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-jest_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-eslint_vx.x.x.js":{"size":4116,"mtime":1626018103549,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-eslint_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-core_vx.x.x.js":{"size":8110,"mtime":1626018103738,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/babel-core_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/axios_v0.18.x.js":{"size":5029,"mtime":1626018100283,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/axios_v0.18.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/@fortawesome/fontawesome-free_vx.x.x.js":{"size":4449,"mtime":1626018103536,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/flow-typed/npm/@fortawesome/fontawesome-free_vx.x.x.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"},"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/dll/renderer.dev.dll.js":{"size":3355744,"mtime":1626018109349,"results":{"filePath":"/Users/harikrishna/Documents/C/S3-Uploader-Electron-React-Node/dll/renderer.dev.dll.js","messages":[{"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override."}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0},"hashOfConfig":"1ni7uca"}}